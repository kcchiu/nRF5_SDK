<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\_build\nrf52832_xxaa.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\_build\nrf52832_xxaa.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060020: Last Updated: Tue Apr 26 20:11:42 2016
<BR><P>
<H3>Maximum Stack Usage =        584 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemoryManagement_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemoryManagement_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMonitor_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMonitor_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[19]">CCM_AAR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">CCM_AAR_IRQHandler</a><BR>
 <LI><a href="#[92]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[92]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a><BR>
 <LI><a href="#[91]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[91]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">BusFault_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[19]">CCM_AAR_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1d]">COMP_LPCOMP_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[7]">DebugMonitor_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[18]">ECB_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2e]">FPU_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[10]">GPIOTE_IRQHandler</a> from nrf_drv_gpiote.o(i.GPIOTE_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2d]">I2S_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[28]">MWU_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[3]">MemoryManagement_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[f]">NFCT_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[27]">PDM_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[a]">POWER_CLOCK_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[26]">PWM0_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[29]">PWM1_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2a]">PWM2_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1c]">QDEC_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[b]">RADIO_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[17]">RNG_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[15]">RTC0_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1b]">RTC1_IRQHandler</a> from app_timer.o(i.RTC1_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2c]">RTC2_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[11]">SAADC_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[d]">SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[e]">SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[2b]">SPIM2_SPIS2_SPI2_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1e]">SWI0_EGU0_IRQHandler</a> from app_timer.o(i.SWI0_EGU0_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1f]">SWI1_EGU1_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[20]">SWI2_EGU2_IRQHandler</a> from softdevice_handler.o(i.SWI2_EGU2_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[21]">SWI3_EGU3_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[22]">SWI4_EGU4_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[23]">SWI5_EGU5_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[30]">SystemInit</a> from system_nrf52.o(i.SystemInit) referenced from arm_startup_nrf52.o(.text)
 <LI><a href="#[16]">TEMP_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[12]">TIMER0_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[13]">TIMER1_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[14]">TIMER2_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[24]">TIMER3_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[25]">TIMER4_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[c]">UARTE0_UART0_IRQHandler</a> from nrf_drv_uart.o(i.UARTE0_UART0_IRQHandler) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[1a]">WDT_IRQHandler</a> from arm_startup_nrf52.o(.text) referenced from arm_startup_nrf52.o(RESET)
 <LI><a href="#[31]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from arm_startup_nrf52.o(.text)
 <LI><a href="#[54]">alert_timer_handler</a> from bsp.o(i.alert_timer_handler) referenced from bsp.o(i.bsp_init)
 <LI><a href="#[7e]">battery_level_meas_timeout_handler</a> from main.o(i.battery_level_meas_timeout_handler) referenced from main.o(i.timers_init)
 <LI><a href="#[35]">ble_conn_bw_counts_t_enc</a> from ble_struct_serialization.o(i.ble_conn_bw_counts_t_enc) referenced from ble_struct_serialization.o(i.ble_common_enable_params_t_enc)
 <LI><a href="#[37]">ble_enable_params_t_enc</a> from ble_struct_serialization.o(i.ble_enable_params_t_enc) referenced from ble_enable.o(i.ble_enable_req_enc)
 <LI><a href="#[50]">ble_evt_dispatch</a> from main.o(i.ble_evt_dispatch) referenced from main.o(i.ble_stack_init)
 <LI><a href="#[38]">ble_gap_addr_enc</a> from ble_gap_struct_serialization.o(i.ble_gap_addr_enc) referenced from ble_gap_adv_start.o(i.ble_gap_adv_start_req_enc)
 <LI><a href="#[38]">ble_gap_addr_enc</a> from ble_gap_struct_serialization.o(i.ble_gap_addr_enc) referenced from ble_gap_struct_serialization.o(i.ble_gap_whitelist_t_enc)
 <LI><a href="#[3c]">ble_gap_enc_key_t_dec</a> from ble_gap_struct_serialization.o(i.ble_gap_enc_key_t_dec) referenced from ble_gap_struct_serialization.o(i.ble_gap_sec_keys_dec)
 <LI><a href="#[3f]">ble_gap_enc_key_t_enc</a> from ble_gap_struct_serialization.o(i.ble_gap_enc_key_t_enc) referenced from ble_gap_struct_serialization.o(i.ble_gap_sec_keys_enc)
 <LI><a href="#[3d]">ble_gap_id_key_t_dec</a> from ble_gap_struct_serialization.o(i.ble_gap_id_key_t_dec) referenced from ble_gap_struct_serialization.o(i.ble_gap_sec_keys_dec)
 <LI><a href="#[40]">ble_gap_id_key_t_enc</a> from ble_gap_struct_serialization.o(i.ble_gap_id_key_t_enc) referenced from ble_gap_struct_serialization.o(i.ble_gap_sec_keys_enc)
 <LI><a href="#[3b]">ble_gap_irk_enc</a> from ble_gap_struct_serialization.o(i.ble_gap_irk_enc) referenced from ble_gap_sec_info_reply.o(i.ble_gap_sec_info_reply_req_enc)
 <LI><a href="#[3b]">ble_gap_irk_enc</a> from ble_gap_struct_serialization.o(i.ble_gap_irk_enc) referenced from ble_gap_struct_serialization.o(i.ble_gap_whitelist_t_enc)
 <LI><a href="#[3a]">ble_gap_lesc_p256_pk_t_dec</a> from ble_gap_struct_serialization.o(i.ble_gap_lesc_p256_pk_t_dec) referenced from ble_gap_evt_lesc_dhkey_request.o(i.ble_gap_evt_lesc_dhkey_request_dec)
 <LI><a href="#[3a]">ble_gap_lesc_p256_pk_t_dec</a> from ble_gap_struct_serialization.o(i.ble_gap_lesc_p256_pk_t_dec) referenced from ble_gap_struct_serialization.o(i.ble_gap_sec_keys_dec)
 <LI><a href="#[42]">ble_gap_lesc_p256_pk_t_enc</a> from ble_gap_struct_serialization.o(i.ble_gap_lesc_p256_pk_t_enc) referenced from ble_gap_struct_serialization.o(i.ble_gap_sec_keys_enc)
 <LI><a href="#[45]">ble_gap_sec_keyset_t_dec</a> from ble_gap_struct_serialization.o(i.ble_gap_sec_keyset_t_dec) referenced from ble_gap_sec_params_reply.o(i.ble_gap_sec_params_reply_rsp_dec)
 <LI><a href="#[44]">ble_gap_sec_keyset_t_enc</a> from ble_gap_struct_serialization.o(i.ble_gap_sec_keyset_t_enc) referenced from ble_gap_sec_params_reply.o(i.ble_gap_sec_params_reply_req_enc)
 <LI><a href="#[43]">ble_gap_sec_params_t_enc</a> from ble_gap_struct_serialization.o(i.ble_gap_sec_params_t_enc) referenced from ble_gap_sec_params_reply.o(i.ble_gap_sec_params_reply_req_enc)
 <LI><a href="#[3e]">ble_gap_sign_info_dec</a> from ble_gap_struct_serialization.o(i.ble_gap_sign_info_dec) referenced from ble_gap_struct_serialization.o(i.ble_gap_sec_keys_dec)
 <LI><a href="#[41]">ble_gap_sign_info_enc</a> from ble_gap_struct_serialization.o(i.ble_gap_sign_info_enc) referenced from ble_gap_struct_serialization.o(i.ble_gap_sec_keys_enc)
 <LI><a href="#[39]">ble_gap_whitelist_t_enc</a> from ble_gap_struct_serialization.o(i.ble_gap_whitelist_t_enc) referenced from ble_gap_adv_start.o(i.ble_gap_adv_start_req_enc)
 <LI><a href="#[46]">ble_gattc_attr_info_t_128_dec</a> from ble_gattc_struct_serialization.o(i.ble_gattc_attr_info_t_128_dec) referenced from ble_gattc_struct_serialization.o(i.ble_gattc_evt_attr_info_disc_rsp_t_dec)
 <LI><a href="#[47]">ble_gattc_attr_info_t_16_dec</a> from ble_gattc_struct_serialization.o(i.ble_gattc_attr_info_t_16_dec) referenced from ble_gattc_struct_serialization.o(i.ble_gattc_evt_attr_info_disc_rsp_t_dec)
 <LI><a href="#[4c]">ble_gatts_attr_enc</a> from ble_gatts_struct_serialization.o(i.ble_gatts_attr_enc) referenced from ble_gatts_characteristic_add.o(i.ble_gatts_characteristic_add_req_enc)
 <LI><a href="#[4c]">ble_gatts_attr_enc</a> from ble_gatts_struct_serialization.o(i.ble_gatts_attr_enc) referenced from ble_gatts_descriptor_add.o(i.ble_gatts_descriptor_add_req_enc)
 <LI><a href="#[49]">ble_gatts_attr_md_enc</a> from ble_gatts_struct_serialization.o(i.ble_gatts_attr_md_enc) referenced from ble_gatts_struct_serialization.o(i.ble_gatts_attr_enc)
 <LI><a href="#[49]">ble_gatts_attr_md_enc</a> from ble_gatts_struct_serialization.o(i.ble_gatts_attr_md_enc) referenced from ble_gatts_struct_serialization.o(i.ble_gatts_char_md_enc)
 <LI><a href="#[4d]">ble_gatts_char_handles_dec</a> from ble_gatts_struct_serialization.o(i.ble_gatts_char_handles_dec) referenced from ble_gatts_characteristic_add.o(i.ble_gatts_characteristic_add_rsp_dec)
 <LI><a href="#[4b]">ble_gatts_char_md_enc</a> from ble_gatts_struct_serialization.o(i.ble_gatts_char_md_enc) referenced from ble_gatts_characteristic_add.o(i.ble_gatts_characteristic_add_req_enc)
 <LI><a href="#[4f]">ble_gatts_value_t_enc</a> from ble_gatts_struct_serialization.o(i.ble_gatts_value_t_enc) referenced from ble_gatts_value_set.o(i.ble_gatts_value_set_req_enc)
 <LI><a href="#[48]">ble_uuid_t_enc</a> from ble_struct_serialization.o(i.ble_uuid_t_enc) referenced from ble_gatts_struct_serialization.o(i.ble_gatts_attr_enc)
 <LI><a href="#[82]">bsp_button_event_handler</a> from bsp.o(i.bsp_button_event_handler) referenced 4 times from bsp.o(.constdata)
 <LI><a href="#[5a]">bsp_event_handler</a> from main.o(i.bsp_event_handler) referenced from main.o(i.main)
 <LI><a href="#[52]">button_timer_handler</a> from bsp.o(i.button_timer_handler) referenced from bsp.o(i.bsp_init)
 <LI><a href="#[5d]">conn_params_error_handler</a> from main.o(i.conn_params_error_handler) referenced from main.o(i.main)
 <LI><a href="#[33]">detection_delay_timeout_handler</a> from app_button.o(i.detection_delay_timeout_handler) referenced from app_button.o(i.app_button_init)
 <LI><a href="#[58]">device_manager_evt_handler</a> from main.o(i.device_manager_evt_handler) referenced from main.o(i.device_manager_init)
 <LI><a href="#[59]">dm_pstorage_cb_handler</a> from device_manager_peripheral.o(i.dm_pstorage_cb_handler) referenced from device_manager_peripheral.o(i.dm_init)
 <LI><a href="#[5e]">enable_rsp_dec</a> from app_mw_ble.o(i.enable_rsp_dec) referenced from app_mw_ble.o(i.sd_ble_enable)
 <LI><a href="#[5f]">gap_address_get_rsp_dec</a> from app_mw_ble_gap.o(i.gap_address_get_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_address_get)
 <LI><a href="#[60]">gap_adv_data_set_rsp_dec</a> from app_mw_ble_gap.o(i.gap_adv_data_set_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_adv_data_set)
 <LI><a href="#[61]">gap_adv_start_rsp_dec</a> from app_mw_ble_gap.o(i.gap_adv_start_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_adv_start)
 <LI><a href="#[62]">gap_adv_stop_rsp_dec</a> from app_mw_ble_gap.o(i.gap_adv_stop_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_adv_stop)
 <LI><a href="#[63]">gap_appearance_get_rsp_dec</a> from app_mw_ble_gap.o(i.gap_appearance_get_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_appearance_get)
 <LI><a href="#[64]">gap_appearance_set_rsp_dec</a> from app_mw_ble_gap.o(i.gap_appearance_set_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_appearance_set)
 <LI><a href="#[65]">gap_conn_param_update_rsp_dec</a> from app_mw_ble_gap.o(i.gap_conn_param_update_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_conn_param_update)
 <LI><a href="#[66]">gap_device_name_get_rsp_dec</a> from app_mw_ble_gap.o(i.gap_device_name_get_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_device_name_get)
 <LI><a href="#[67]">gap_device_name_set_rsp_dec</a> from app_mw_ble_gap.o(i.gap_device_name_set_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_device_name_set)
 <LI><a href="#[68]">gap_disconnect_rsp_dec</a> from app_mw_ble_gap.o(i.gap_disconnect_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_disconnect)
 <LI><a href="#[69]">gap_ppcp_get_reply_rsp_dec</a> from app_mw_ble_gap.o(i.gap_ppcp_get_reply_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_ppcp_get)
 <LI><a href="#[6a]">gap_ppcp_set_rsp_dec</a> from app_mw_ble_gap.o(i.gap_ppcp_set_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_ppcp_set)
 <LI><a href="#[6b]">gap_sec_info_reply_rsp_dec</a> from app_mw_ble_gap.o(i.gap_sec_info_reply_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_sec_info_reply)
 <LI><a href="#[6c]">gap_sec_params_reply_rsp_dec</a> from app_mw_ble_gap.o(i.gap_sec_params_reply_rsp_dec) referenced from app_mw_ble_gap.o(i.sd_ble_gap_sec_params_reply)
 <LI><a href="#[8d]">gattc_context_apply</a> from device_manager_peripheral.o(i.gattc_context_apply) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[89]">gattc_context_load</a> from device_manager_peripheral.o(i.gattc_context_load) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[85]">gattc_context_store</a> from device_manager_peripheral.o(i.gattc_context_store) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[6d]">gatts_characteristic_add_rsp_dec</a> from app_mw_ble_gatts.o(i.gatts_characteristic_add_rsp_dec) referenced from app_mw_ble_gatts.o(i.sd_ble_gatts_characteristic_add)
 <LI><a href="#[8c]">gatts_context_apply</a> from device_manager_peripheral.o(i.gatts_context_apply) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[88]">gatts_context_load</a> from device_manager_peripheral.o(i.gatts_context_load) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[84]">gatts_context_store</a> from device_manager_peripheral.o(i.gatts_context_store) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[6e]">gatts_descriptor_add_rsp_dec</a> from app_mw_ble_gatts.o(i.gatts_descriptor_add_rsp_dec) referenced from app_mw_ble_gatts.o(i.sd_ble_gatts_descriptor_add)
 <LI><a href="#[6f]">gatts_hvx_rsp_dec</a> from app_mw_ble_gatts.o(i.gatts_hvx_rsp_dec) referenced from app_mw_ble_gatts.o(i.sd_ble_gatts_hvx)
 <LI><a href="#[70]">gatts_service_add_rsp_dec</a> from app_mw_ble_gatts.o(i.gatts_service_add_rsp_dec) referenced from app_mw_ble_gatts.o(i.sd_ble_gatts_service_add)
 <LI><a href="#[71]">gatts_service_changed_rsp_dec</a> from app_mw_ble_gatts.o(i.gatts_service_changed_rsp_dec) referenced from app_mw_ble_gatts.o(i.sd_ble_gatts_service_changed)
 <LI><a href="#[72]">gatts_sys_attr_get_rsp_dec</a> from app_mw_ble_gatts.o(i.gatts_sys_attr_get_rsp_dec) referenced from app_mw_ble_gatts.o(i.sd_ble_gatts_sys_attr_get)
 <LI><a href="#[73]">gatts_sys_attr_set_rsp_dec</a> from app_mw_ble_gatts.o(i.gatts_sys_attr_set_rsp_dec) referenced from app_mw_ble_gatts.o(i.sd_ble_gatts_sys_attr_set)
 <LI><a href="#[74]">gatts_value_set_rsp_dec</a> from app_mw_ble_gatts.o(i.gatts_value_set_rsp_dec) referenced from app_mw_ble_gatts.o(i.sd_ble_gatts_value_set)
 <LI><a href="#[8e]">gattsc_context_apply</a> from device_manager_peripheral.o(i.gattsc_context_apply) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[8a]">gattsc_context_load</a> from device_manager_peripheral.o(i.gattsc_context_load) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[86]">gattsc_context_store</a> from device_manager_peripheral.o(i.gattsc_context_store) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[32]">gpiote_event_handler</a> from app_button.o(i.gpiote_event_handler) referenced from app_button.o(i.app_button_init)
 <LI><a href="#[7f]">heart_rate_meas_timeout_handler</a> from main.o(i.heart_rate_meas_timeout_handler) referenced from main.o(i.timers_init)
 <LI><a href="#[53]">leds_timer_handler</a> from bsp.o(i.leds_timer_handler) referenced from bsp.o(i.bsp_init)
 <LI><a href="#[2f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[8b]">no_service_context_apply</a> from device_manager_peripheral.o(i.no_service_context_apply) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[87]">no_service_context_load</a> from device_manager_peripheral.o(i.no_service_context_load) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[83]">no_service_context_store</a> from device_manager_peripheral.o(i.no_service_context_store) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[5b]">on_adv_evt</a> from main.o(i.on_adv_evt) referenced from main.o(i.main)
 <LI><a href="#[5c]">on_conn_params_evt</a> from main.o(i.on_conn_params_evt) referenced from main.o(i.main)
 <LI><a href="#[77]">os_rsp_set_handler</a> from ser_softdevice_handler.o(i.os_rsp_set_handler) referenced from ser_softdevice_handler.o(i.sd_softdevice_enable)
 <LI><a href="#[7a]">phy_events_handler</a> from ser_hal_transport.o(i.phy_events_handler) referenced from ser_hal_transport.o(i.ser_hal_transport_open)
 <LI><a href="#[57]">pstorage_store</a> from pstorage_nosd.o(i.pstorage_store) referenced from device_manager_peripheral.o(i.device_context_store)
 <LI><a href="#[57]">pstorage_store</a> from pstorage_nosd.o(i.pstorage_store) referenced from device_manager_peripheral.o(i.gatts_context_store)
 <LI><a href="#[56]">pstorage_update</a> from pstorage_nosd.o(i.pstorage_update) referenced from device_manager_peripheral.o(i.device_context_store)
 <LI><a href="#[56]">pstorage_update</a> from pstorage_nosd.o(i.pstorage_update) referenced from device_manager_peripheral.o(i.gatts_context_store)
 <LI><a href="#[80]">rr_interval_timeout_handler</a> from main.o(i.rr_interval_timeout_handler) referenced from main.o(i.timers_init)
 <LI><a href="#[81]">sensor_contact_detected_timeout_handler</a> from main.o(i.sensor_contact_detected_timeout_handler) referenced from main.o(i.timers_init)
 <LI><a href="#[4a]">ser_ble_gatts_char_pf_enc</a> from ble_gatts_struct_serialization.o(i.ser_ble_gatts_char_pf_enc) referenced from ble_gatts_struct_serialization.o(i.ble_gatts_char_md_enc)
 <LI><a href="#[7b]">ser_phy_uart_evt_callback</a> from ser_phy_nrf51_uart.o(i.ser_phy_uart_evt_callback) referenced from ser_phy_nrf51_uart.o(i.ser_phy_open)
 <LI><a href="#[78]">ser_sd_rsp_wait</a> from ser_softdevice_handler.o(i.ser_sd_rsp_wait) referenced from ser_softdevice_handler.o(i.sd_softdevice_enable)
 <LI><a href="#[7c]">ser_sd_transport_hal_handler</a> from ser_sd_transport.o(i.ser_sd_transport_hal_handler) referenced from ser_sd_transport.o(i.ser_sd_transport_open)
 <LI><a href="#[79]">ser_softdevice_evt_handler</a> from ser_softdevice_handler.o(i.ser_softdevice_evt_handler) referenced from ser_softdevice_handler.o(i.sd_softdevice_enable)
 <LI><a href="#[76]">ser_softdevice_flash_operation_success_evt</a> from ser_softdevice_handler.o(i.ser_softdevice_flash_operation_success_evt) referenced from ser_softdevice_handler.o(i.sd_softdevice_enable)
 <LI><a href="#[7d]">softdevice_fault_handler</a> from softdevice_handler.o(i.softdevice_fault_handler) referenced from softdevice_handler.o(i.softdevice_handler_init)
 <LI><a href="#[55]">storage_operation_dummy_handler</a> from device_manager_peripheral.o(i.storage_operation_dummy_handler) referenced from device_manager_peripheral.o(i.device_context_store)
 <LI><a href="#[51]">sys_evt_dispatch</a> from main.o(i.sys_evt_dispatch) referenced from main.o(i.ble_stack_init)
 <LI><a href="#[34]">uart_event_handler</a> from app_uart.o(i.uart_event_handler) referenced from app_uart.o(i.app_uart_init)
 <LI><a href="#[4e]">uint16_t_dec</a> from ble_serialization.o(i.uint16_t_dec) referenced from ble_gatts_hvx.o(i.ble_gatts_hvx_rsp_dec)
 <LI><a href="#[36]">update_timeout_handler</a> from ble_conn_params.o(i.update_timeout_handler) referenced from ble_conn_params.o(i.ble_conn_params_init)
 <LI><a href="#[75]">uuid_encode_rsp_dec</a> from app_mw_ble.o(i.uuid_encode_rsp_dec) referenced from app_mw_ble.o(i.sd_ble_uuid_encode)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[31]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(.text)
</UL>
<P><STRONG><a name="[22e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[8f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[96]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[22f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[230]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[231]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[232]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[233]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[91]"></a>__asm___11_nrf_delay_c_532987f3__nrf_delay_us</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, nrf_delay.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>

<P><STRONG><a name="[92]"></a>__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, app_timer.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemoryManagement_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryManagement_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryManagement_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMonitor_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMonitor_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMonitor_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>COMP_LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>MWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>NFCT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>PDM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PWM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>RTC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SAADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>SPIM2_SPIS2_SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SWI1_EGU1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SWI3_EGU3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SWI4_EGU4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SWI5_EGU5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[234]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_sized_put
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_sized_get
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_info_reply_req_enc
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_set_req_enc
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_encode_rsp_dec
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_enc
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_write_rsp_dec
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_read_rsp_dec
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_hvx_dec
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_set_req_enc
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_get_rsp_dec
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_hvx_req_enc
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_lesc_p256_pk_t_enc
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_lesc_p256_pk_t_dec
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_vector_dec
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_dec
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sign_info_enc
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sign_info_dec
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_irk_dec
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_enc_info_enc
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_enc_info_dec
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_irk_enc
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid128_t_dec
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_vals_read_rsp_t_dec
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_t_dec
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_t_dec
</UL>

<P><STRONG><a name="[d5]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_params_reply
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
</UL>

<P><STRONG><a name="[19e]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_rr_interval_add
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrm_encode
</UL>

<P><STRONG><a name="[235]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[236]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[237]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
</UL>

<P><STRONG><a name="[e2]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_char_add
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable_get_default_config
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_measurement_char_add
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;body_sensor_location_char_add
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_add
</UL>

<P><STRONG><a name="[239]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1a2]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_ascii_to_utf8
</UL>

<P><STRONG><a name="[1bb]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_find
</UL>

<P><STRONG><a name="[ad]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[90]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[23a]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[23b]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[23c]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[10]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 316 bytes, Stack size 48 bytes, nrf_drv_gpiote.o(i.GPIOTE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIOTE_IRQHandler &rArr; nrf_gpiote_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_is_set
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_clear
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC1_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_timer.o(i.RTC1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RTC1_IRQHandler &rArr; timer_timeouts_check &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>SEGGER_RTT_ConfigDownBuffer</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, segger_rtt.o(i.SEGGER_RTT_ConfigDownBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SEGGER_RTT_ConfigDownBuffer &rArr; _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_rtt_init
</UL>

<P><STRONG><a name="[9e]"></a>SEGGER_RTT_ConfigUpBuffer</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, segger_rtt.o(i.SEGGER_RTT_ConfigUpBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SEGGER_RTT_ConfigUpBuffer &rArr; _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_rtt_init
</UL>

<P><STRONG><a name="[9f]"></a>SEGGER_RTT_Write</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, segger_rtt.o(i.SEGGER_RTT_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>

<P><STRONG><a name="[a0]"></a>SEGGER_RTT_WriteNoLock</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, segger_rtt.o(i.SEGGER_RTT_WriteNoLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAvailWriteSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[a4]"></a>SEGGER_RTT_vprintf</STRONG> (Thumb, 406 bytes, Stack size 120 bytes, segger_rtt_printf.o(i.SEGGER_RTT_vprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_rtt_printf
</UL>

<P><STRONG><a name="[1e]"></a>SWI0_EGU0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_timer.o(i.SWI0_EGU0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SWI0_EGU0_IRQHandler &rArr; timer_list_handler &rArr; compare_reg_update &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SWI2_EGU2_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, softdevice_handler.o(i.SWI2_EGU2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SWI2_EGU2_IRQHandler &rArr; intern_softdevice_events_execute &rArr; sd_ble_evt_get &rArr; app_mailbox_get &rArr; app_mailbox_sized_get &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SystemInit</STRONG> (Thumb, 566 bytes, Stack size 16 bytes, system_nrf52.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>UARTE0_UART0_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_uart.o(i.UARTE0_UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UARTE0_UART0_IRQHandler &rArr; uart_irq_handler &rArr; tx_done_event
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uarte_irq_handler
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52.o(RESET)
</UL>
<P><STRONG><a name="[23d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[23e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[23f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[af]"></a>adv_data_encode</STRONG> (Thumb, 514 bytes, Stack size 48 bytes, ble_advdata.o(i.adv_data_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_get
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_encode
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_role_encode
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_encode
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_addr_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>

<P><STRONG><a name="[1ff]"></a>app_ble_gap_sec_context_create</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app_ble_gap_sec_keys.o(i.app_ble_gap_sec_context_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_ble_gap_sec_context_create
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_params_reply
</UL>

<P><STRONG><a name="[161]"></a>app_ble_gap_sec_context_destroy</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_ble_gap_sec_keys.o(i.app_ble_gap_sec_context_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_ble_gap_sec_context_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sec_params_reply_rsp_dec
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_status_dec
</UL>

<P><STRONG><a name="[160]"></a>app_ble_gap_sec_context_find</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_ble_gap_sec_keys.o(i.app_ble_gap_sec_context_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_ble_gap_sec_context_find
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_lesc_dhkey_request_dec
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_status_dec
</UL>

<P><STRONG><a name="[13d]"></a>app_ble_user_mem_context_destroy</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_ble_user_mem.o(i.app_ble_user_mem_context_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_ble_user_mem_context_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_user_mem_release_dec
</UL>

<P><STRONG><a name="[13e]"></a>app_ble_user_mem_context_find</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_ble_user_mem.o(i.app_ble_user_mem_context_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_ble_user_mem_context_find
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_dec
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_dec
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_user_mem_release_dec
</UL>

<P><STRONG><a name="[bb]"></a>app_button_enable</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_button.o(i.app_button_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_button_enable &rArr; nrf_drv_gpiote_in_event_enable &rArr; nrf_gpiote_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[bd]"></a>app_button_init</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, app_button.o(i.app_button_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = app_button_init &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[c2]"></a>app_error_fault_handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_error_weak.o(i.app_error_fault_handler))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_fault_handler
</UL>

<P><STRONG><a name="[a9]"></a>app_error_handler_bare</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, app_error.o(i.app_error_handler_bare))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_stop
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_start
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_uuid_encode
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_get
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_get
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_data_set
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_address_get
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_power_system_off
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_set
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_disconnect
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_set
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_set
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_init
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_conn_params_evt
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_meas_timeout_handler
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_evt_handler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_error_handler
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_meas_timeout_handler
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_timers_start
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_set
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_get
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_changed
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_params_reply
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_info_reply
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_id_encode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pnp_id_encode
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_add
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_get
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_conn_param_update
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_set
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_hvx
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_descriptor_add
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_value_set_rsp_dec
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_sys_attr_set_rsp_dec
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_sys_attr_get_rsp_dec
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_service_changed_rsp_dec
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_service_add_rsp_dec
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_hvx_rsp_dec
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_descriptor_add_rsp_dec
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_characteristic_add_rsp_dec
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sec_params_reply_rsp_dec
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sec_info_reply_rsp_dec
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_ppcp_set_rsp_dec
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_ppcp_get_reply_rsp_dec
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_rsp_dec
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_name_set_rsp_dec
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_name_get_rsp_dec
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_conn_param_update_rsp_dec
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_appearance_set_rsp_dec
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_appearance_get_rsp_dec
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_stop_rsp_dec
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_start_rsp_dec
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_data_set_rsp_dec
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_address_get_rsp_dec
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_enable
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_encode_rsp_dec
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_rsp_dec
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_uart_evt_callback
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_events_handler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_EGU2_IRQHandler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_softdevice_flash_operation_success_evt
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_softdevice_evt_handler
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_rx_packet_handler
</UL>

<P><STRONG><a name="[20d]"></a>app_mailbox_create</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_mailbox.o(i.app_mailbox_create))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>

<P><STRONG><a name="[c3]"></a>app_mailbox_get</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_mailbox.o(i.app_mailbox_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_mailbox_get &rArr; app_mailbox_sized_get &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_sized_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_evt_get
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_evt_get
</UL>

<P><STRONG><a name="[c5]"></a>app_mailbox_put</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_mailbox.o(i.app_mailbox_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_mailbox_put &rArr; app_mailbox_sized_put &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_sized_put
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_softdevice_flash_operation_success_evt
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_softdevice_evt_handler
</UL>

<P><STRONG><a name="[c4]"></a>app_mailbox_sized_get</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, app_mailbox.o(i.app_mailbox_sized_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_mailbox_sized_get &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_get
</UL>

<P><STRONG><a name="[c6]"></a>app_mailbox_sized_put</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, app_mailbox.o(i.app_mailbox_sized_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_mailbox_sized_put &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dequeue
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_put
</UL>

<P><STRONG><a name="[c1]"></a>app_timer_create</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_timer.o(i.app_timer_create))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_init
</UL>

<P><STRONG><a name="[ca]"></a>app_timer_init</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, app_timer.o(i.app_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_timer_init &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_init
</UL>

<P><STRONG><a name="[cf]"></a>app_timer_start</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, app_timer.o(i.app_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_button_event_handler
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_timers_start
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
</UL>

<P><STRONG><a name="[d3]"></a>app_timer_stop</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_button_event_handler
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
</UL>

<P><STRONG><a name="[d4]"></a>app_uart_init</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, app_uart.o(i.app_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = app_uart_init &rArr; nrf_drv_uart_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx_enable
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_open
</UL>

<P><STRONG><a name="[d9]"></a>app_uart_put</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_uart.o(i.app_uart_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_uart_tx
</UL>

<P><STRONG><a name="[c7]"></a>app_util_critical_region_enter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_util_platform.o(i.app_util_critical_region_enter))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_disable_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_sized_put
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_sized_get
</UL>

<P><STRONG><a name="[c9]"></a>app_util_critical_region_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_util_platform.o(i.app_util_critical_region_exit))
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_enable_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_sized_put
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_sized_get
</UL>

<P><STRONG><a name="[db]"></a>app_util_disable_irq</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_util_platform.o(i.app_util_disable_irq))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
</UL>

<P><STRONG><a name="[dc]"></a>app_util_enable_irq</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_util_platform.o(i.app_util_enable_irq))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
</UL>

<P><STRONG><a name="[e8]"></a>ble_advdata_set</STRONG> (Thumb, 106 bytes, Stack size 96 bytes, ble_advdata.o(i.ble_advdata_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_data_set
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_restart_without_whitelist
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
</UL>

<P><STRONG><a name="[ea]"></a>ble_advertising_init</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, ble_advertising.o(i.ble_advertising_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_peer_address_clear
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ec]"></a>ble_advertising_on_ble_evt</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, ble_advertising.o(i.ble_advertising_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = ble_advertising_on_ble_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[ee]"></a>ble_advertising_on_sys_evt</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ble_advertising.o(i.ble_advertising_on_sys_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = ble_advertising_on_sys_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
</UL>

<P><STRONG><a name="[ef]"></a>ble_advertising_restart_without_whitelist</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, ble_advertising.o(i.ble_advertising_restart_without_whitelist))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = ble_advertising_restart_without_whitelist &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_stop
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler
</UL>

<P><STRONG><a name="[ed]"></a>ble_advertising_start</STRONG> (Thumb, 472 bytes, Stack size 64 bytes, ble_advertising.o(i.ble_advertising_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_start
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_access_status_get
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_queued_op_count_get
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;whitelist_has_entries
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_address_exists
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_peer_address_clear
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_restart_without_whitelist
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_sys_evt
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>ble_bas_battery_level_update</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, ble_bas.o(i.ble_bas_battery_level_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = ble_bas_battery_level_update &rArr; sd_ble_gatts_value_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_set
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_hvx
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_meas_timeout_handler
</UL>

<P><STRONG><a name="[f8]"></a>ble_bas_init</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, ble_bas.o(i.ble_bas_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ble_bas_init &rArr; battery_level_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_char_add
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[137]"></a>ble_bas_on_ble_evt</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, ble_bas.o(i.ble_bas_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_bas_on_ble_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[fa]"></a>ble_common_enable_params_t_enc</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ble_struct_serialization.o(i.ble_common_enable_params_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_common_enable_params_t_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_enable_params_t_enc
</UL>

<P><STRONG><a name="[fd]"></a>ble_conn_bw_count_t_enc</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, ble_struct_serialization.o(i.ble_conn_bw_count_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_conn_bw_count_t_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_bw_counts_t_enc
</UL>

<P><STRONG><a name="[35]"></a>ble_conn_bw_counts_t_enc</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ble_struct_serialization.o(i.ble_conn_bw_counts_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_conn_bw_counts_t_enc &rArr; ble_conn_bw_count_t_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_bw_count_t_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_struct_serialization.o(i.ble_common_enable_params_t_enc)
</UL>
<P><STRONG><a name="[ff]"></a>ble_conn_params_init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ble_conn_params.o(i.ble_conn_params_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ble_conn_params_init &rArr; sd_ble_gap_ppcp_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_set
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_get
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[102]"></a>ble_conn_params_on_ble_evt</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, ble_conn_params.o(i.ble_conn_params_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_conn_params_on_ble_evt &rArr; conn_params_negotiation &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[105]"></a>ble_dis_init</STRONG> (Thumb, 298 bytes, Stack size 32 bytes, ble_dis.o(i.ble_dis_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ble_dis_init &rArr; char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_id_encode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pnp_id_encode
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_add
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[37]"></a>ble_enable_params_t_enc</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, ble_struct_serialization.o(i.ble_enable_params_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_enable_params_t_enc &rArr; ble_common_enable_params_t_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_enable_params_t_enc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_enable_params_t_enc
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_enable_params_t_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_enable.o(i.ble_enable_req_enc)
</UL>
<P><STRONG><a name="[10b]"></a>ble_enable_req_enc</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ble_enable.o(i.ble_enable_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_enable_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_enable
</UL>

<P><STRONG><a name="[10c]"></a>ble_enable_rsp_dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_enable.o(i.ble_enable_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ble_enable_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_rsp_dec
</UL>

<P><STRONG><a name="[10e]"></a>ble_event_dec</STRONG> (Thumb, 566 bytes, Stack size 24 bytes, ble_event.o(i.ble_event_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = ble_event_dec &rArr; ble_gatts_evt_rw_authorize_request_dec &rArr; ble_gatts_evt_rw_authorize_request_t_dec &rArr; ble_gatts_evt_write_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_dec
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_dec
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_timeout_dec
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_sys_attr_missing_dec
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_sc_confirm_dec
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_dec
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_hvc_dec
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_write_rsp_dec
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_timeout_dec
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_rel_disc_rsp_dec
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_read_rsp_dec
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_prim_srvc_disc_rsp_dec
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_hvx_dec
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_desc_disc_rsp_dec
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_vals_read_rsp_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_val_by_uuid_read_rsp_dec
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_disc_rsp_dec
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_attr_info_disc_rsp_dec
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_timeout_dec
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_request_dec
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_params_request_dec
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_info_request_dec
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_scan_req_report_dec
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_rssi_changed_dec
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_passkey_display_dec
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_lesc_dhkey_request_dec
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_key_pressed_dec
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_disconnected_dec
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_connected_dec
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_conn_sec_update_dec
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_conn_param_update_request_dec
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_conn_param_update_dec
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_status_dec
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_key_request_dec
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_adv_report_dec
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_user_mem_request_dec
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_user_mem_release_dec
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_tx_complete_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_softdevice_evt_handler
</UL>

<P><STRONG><a name="[10f]"></a>ble_evt_tx_complete_dec</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, ble_evt_tx_complete.o(i.ble_evt_tx_complete_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_evt_tx_complete_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[111]"></a>ble_evt_user_mem_release_dec</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, ble_evt_user_mem_release.o(i.ble_evt_user_mem_release_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_evt_user_mem_release_dec &rArr; app_ble_user_mem_context_find
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_user_mem_context_find
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_user_mem_context_destroy
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[110]"></a>ble_evt_user_mem_request_dec</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, ble_evt_user_mem_request.o(i.ble_evt_user_mem_request_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_evt_user_mem_request_dec &rArr; uint8_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[13f]"></a>ble_flash_block_write</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, ble_flash.o(i.ble_flash_block_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_write
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_store
</UL>

<P><STRONG><a name="[141]"></a>ble_flash_page_erase</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ble_flash.o(i.ble_flash_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
</UL>

<P><STRONG><a name="[15d]"></a>ble_gap_addr_dec</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ble_gap_struct_serialization.o(i.ble_gap_addr_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_gap_addr_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_scan_req_report_dec
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_adv_report_dec
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_info_request_t_dec
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_connected_t_dec
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_id_key_t_dec
</UL>

<P><STRONG><a name="[38]"></a>ble_gap_addr_enc</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ble_gap_struct_serialization.o(i.ble_gap_addr_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_gap_addr_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_id_key_t_enc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ble_gap_adv_start.o(i.ble_gap_adv_start_req_enc)
<LI> ble_gap_struct_serialization.o(i.ble_gap_whitelist_t_enc)
</UL>
<P><STRONG><a name="[1f8]"></a>ble_gap_address_get_req_enc</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ble_gap_address_get.o(i.ble_gap_address_get_req_enc))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_address_get
</UL>

<P><STRONG><a name="[143]"></a>ble_gap_address_get_rsp_dec</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, ble_gap_address_get.o(i.ble_gap_address_get_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gap_address_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_address_get_rsp_dec
</UL>

<P><STRONG><a name="[145]"></a>ble_gap_adv_ch_mask_t_enc</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ble_gap_struct_serialization.o(i.ble_gap_adv_ch_mask_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gap_adv_ch_mask_t_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_start_req_enc
</UL>

<P><STRONG><a name="[146]"></a>ble_gap_adv_data_set_req_enc</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, ble_gap_adv_data_set.o(i.ble_gap_adv_data_set_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ble_gap_adv_data_set_req_enc &rArr; len8data_enc &rArr; buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len8data_enc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_data_set
</UL>

<P><STRONG><a name="[148]"></a>ble_gap_adv_data_set_rsp_dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gap_adv_data_set.o(i.ble_gap_adv_data_set_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ble_gap_adv_data_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_data_set_rsp_dec
</UL>

<P><STRONG><a name="[149]"></a>ble_gap_adv_start_req_enc</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, ble_gap_adv_start.o(i.ble_gap_adv_start_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_gap_adv_start_req_enc &rArr; ble_gap_adv_ch_mask_t_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_ch_mask_t_enc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_start
</UL>

<P><STRONG><a name="[14a]"></a>ble_gap_adv_start_rsp_dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gap_adv_start.o(i.ble_gap_adv_start_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ble_gap_adv_start_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_start_rsp_dec
</UL>

<P><STRONG><a name="[14b]"></a>ble_gap_adv_stop_req_enc</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ble_gap_adv_stop.o(i.ble_gap_adv_stop_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gap_adv_stop_req_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_stop
</UL>

<P><STRONG><a name="[14c]"></a>ble_gap_adv_stop_rsp_dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gap_adv_stop.o(i.ble_gap_adv_stop_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ble_gap_adv_stop_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_adv_stop_rsp_dec
</UL>

<P><STRONG><a name="[1f9]"></a>ble_gap_appearance_get_req_enc</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ble_gap_appearance_get.o(i.ble_gap_appearance_get_req_enc))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_get
</UL>

<P><STRONG><a name="[14d]"></a>ble_gap_appearance_get_rsp_dec</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, ble_gap_appearance_get.o(i.ble_gap_appearance_get_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gap_appearance_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_appearance_get_rsp_dec
</UL>

<P><STRONG><a name="[1fa]"></a>ble_gap_appearance_set_req_enc</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ble_gap_appearance_set.o(i.ble_gap_appearance_set_req_enc))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_set
</UL>

<P><STRONG><a name="[14e]"></a>ble_gap_appearance_set_rsp_dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gap_appearance_set.o(i.ble_gap_appearance_set_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ble_gap_appearance_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_appearance_set_rsp_dec
</UL>

<P><STRONG><a name="[14f]"></a>ble_gap_conn_param_update_req_enc</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, ble_gap_conn_param_update.o(i.ble_gap_conn_param_update_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gap_conn_param_update_req_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_conn_param_update
</UL>

<P><STRONG><a name="[151]"></a>ble_gap_conn_param_update_rsp_dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gap_conn_param_update.o(i.ble_gap_conn_param_update_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ble_gap_conn_param_update_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_conn_param_update_rsp_dec
</UL>

<P><STRONG><a name="[152]"></a>ble_gap_conn_params_t_dec</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_conn_params_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_gap_conn_params_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_connected_t_dec
</UL>

<P><STRONG><a name="[153]"></a>ble_gap_conn_sec_mode_enc</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ble_gap_struct_serialization.o(i.ble_gap_conn_sec_mode_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gap_conn_sec_mode_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_md_enc
</UL>

<P><STRONG><a name="[1fc]"></a>ble_gap_device_name_get_req_enc</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, ble_gap_device_name_get.o(i.ble_gap_device_name_get_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ble_gap_device_name_get_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_get
</UL>

<P><STRONG><a name="[154]"></a>ble_gap_device_name_get_rsp_dec</STRONG> (Thumb, 88 bytes, Stack size 48 bytes, ble_gap_device_name_get.o(i.ble_gap_device_name_get_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = ble_gap_device_name_get_rsp_dec &rArr; len16data_dec &rArr; buf_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_name_get_rsp_dec
</UL>

<P><STRONG><a name="[156]"></a>ble_gap_device_name_set_req_enc</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, ble_gap_device_name_set.o(i.ble_gap_device_name_set_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gap_device_name_set_req_enc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_set
</UL>

<P><STRONG><a name="[157]"></a>ble_gap_device_name_set_rsp_dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gap_device_name_set.o(i.ble_gap_device_name_set_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ble_gap_device_name_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_name_set_rsp_dec
</UL>

<P><STRONG><a name="[1fd]"></a>ble_gap_disconnect_req_enc</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ble_gap_disconnect.o(i.ble_gap_disconnect_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_gap_disconnect_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_disconnect
</UL>

<P><STRONG><a name="[158]"></a>ble_gap_disconnect_rsp_dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gap_disconnect.o(i.ble_gap_disconnect_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ble_gap_disconnect_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_rsp_dec
</UL>

<P><STRONG><a name="[109]"></a>ble_gap_enable_params_t_enc</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_enable_params_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_gap_enable_params_t_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_enable_params_t_enc
</UL>

<P><STRONG><a name="[159]"></a>ble_gap_enc_info_dec</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_enc_info_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_gap_enc_info_dec &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_enc_key_t_dec
</UL>

<P><STRONG><a name="[15a]"></a>ble_gap_enc_info_enc</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_enc_info_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_gap_enc_info_enc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_enc_key_t_enc
</UL>

<P><STRONG><a name="[3c]"></a>ble_gap_enc_key_t_dec</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_enc_key_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_gap_enc_key_t_dec &rArr; ble_gap_master_id_t_dec &rArr; uint16_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_master_id_t_dec
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_enc_info_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gap_struct_serialization.o(i.ble_gap_sec_keys_dec)
</UL>
<P><STRONG><a name="[3f]"></a>ble_gap_enc_key_t_enc</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_enc_key_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_gap_enc_key_t_enc &rArr; ble_gap_master_id_t_enc &rArr; uint16_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_master_id_t_enc
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_enc_info_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gap_struct_serialization.o(i.ble_gap_sec_keys_enc)
</UL>
<P><STRONG><a name="[133]"></a>ble_gap_evt_adv_report_dec</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, ble_gap_evt_adv_report.o(i.ble_gap_evt_adv_report_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_gap_evt_adv_report_dec &rArr; uint8_vector_dec &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_vector_dec
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_addr_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[113]"></a>ble_gap_evt_auth_key_request_dec</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, ble_gap_evt_auth_key_request.o(i.ble_gap_evt_auth_key_request_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gap_evt_auth_key_request_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[11d]"></a>ble_gap_evt_auth_status_dec</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, ble_gap_evt_auth_status.o(i.ble_gap_evt_auth_status_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = ble_gap_evt_auth_status_dec &rArr; ble_gap_sec_keyset_t_dec &rArr; ble_gap_sec_keys_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_sec_context_find
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_sec_context_destroy
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_keyset_t_dec
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_status_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[15f]"></a>ble_gap_evt_auth_status_t_dec</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_evt_auth_status_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gap_evt_auth_status_t_dec &rArr; ble_gap_sec_levels_dec &rArr; uint8_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_levels_dec
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_kdist_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_status_dec
</UL>

<P><STRONG><a name="[114]"></a>ble_gap_evt_conn_param_update_dec</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, ble_gap_evt_conn_param_update.o(i.ble_gap_evt_conn_param_update_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gap_evt_conn_param_update_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[115]"></a>ble_gap_evt_conn_param_update_request_dec</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, ble_gap_evt_conn_param_update_request.o(i.ble_gap_evt_conn_param_update_request_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gap_evt_conn_param_update_request_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[116]"></a>ble_gap_evt_conn_sec_update_dec</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, ble_gap_evt_conn_sec_update.o(i.ble_gap_evt_conn_sec_update_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gap_evt_conn_sec_update_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[117]"></a>ble_gap_evt_connected_dec</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, ble_gap_evt_connected.o(i.ble_gap_evt_connected_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ble_gap_evt_connected_dec &rArr; ble_gap_evt_connected_t_dec &rArr; ble_gap_conn_params_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_connected_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[164]"></a>ble_gap_evt_connected_t_dec</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_evt_connected_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ble_gap_evt_connected_t_dec &rArr; ble_gap_conn_params_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_addr_dec
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_params_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_connected_dec
</UL>

<P><STRONG><a name="[118]"></a>ble_gap_evt_disconnected_dec</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, ble_gap_evt_disconnected.o(i.ble_gap_evt_disconnected_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gap_evt_disconnected_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[11f]"></a>ble_gap_evt_key_pressed_dec</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, ble_gap_evt_key_pressed.o(i.ble_gap_evt_key_pressed_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_gap_evt_key_pressed_dec &rArr; uint8_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[120]"></a>ble_gap_evt_lesc_dhkey_request_dec</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, ble_gap_evt_lesc_dhkey_request.o(i.ble_gap_evt_lesc_dhkey_request_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ble_gap_evt_lesc_dhkey_request_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_sec_context_find
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_dec
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[112]"></a>ble_gap_evt_passkey_display_dec</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, ble_gap_evt_passkey_display.o(i.ble_gap_evt_passkey_display_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_gap_evt_passkey_display_dec &rArr; uint8_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[11a]"></a>ble_gap_evt_rssi_changed_dec</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, ble_gap_evt_rssi_changed.o(i.ble_gap_evt_rssi_changed_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gap_evt_rssi_changed_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int8_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[134]"></a>ble_gap_evt_scan_req_report_dec</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, ble_gap_evt_scan_req_report.o(i.ble_gap_evt_scan_req_report_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_gap_evt_scan_req_report_dec &rArr; uint8_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_addr_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[11b]"></a>ble_gap_evt_sec_info_request_dec</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, ble_gap_evt_sec_info_request.o(i.ble_gap_evt_sec_info_request_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_gap_evt_sec_info_request_dec &rArr; ble_gap_evt_sec_info_request_t_dec &rArr; ble_gap_master_id_t_dec &rArr; uint16_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_info_request_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[167]"></a>ble_gap_evt_sec_info_request_t_dec</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_evt_sec_info_request_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_gap_evt_sec_info_request_t_dec &rArr; ble_gap_master_id_t_dec &rArr; uint16_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_addr_dec
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_master_id_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_info_request_dec
</UL>

<P><STRONG><a name="[11c]"></a>ble_gap_evt_sec_params_request_dec</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, ble_gap_evt_sec_params_request.o(i.ble_gap_evt_sec_params_request_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ble_gap_evt_sec_params_request_dec &rArr; ble_gap_evt_sec_params_request_t_dec &rArr; ble_gap_sec_params_t_dec &rArr; ble_gap_sec_kdist_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_params_request_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[168]"></a>ble_gap_evt_sec_params_request_t_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_gap_struct_serialization.o(i.ble_gap_evt_sec_params_request_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_gap_evt_sec_params_request_t_dec &rArr; ble_gap_sec_params_t_dec &rArr; ble_gap_sec_kdist_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_params_request_dec
</UL>

<P><STRONG><a name="[11e]"></a>ble_gap_evt_sec_request_dec</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, ble_gap_evt_sec_request.o(i.ble_gap_evt_sec_request_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gap_evt_sec_request_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_request_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[16a]"></a>ble_gap_evt_sec_request_t_dec</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, ble_gap_struct_serialization.o(i.ble_gap_evt_sec_request_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ble_gap_evt_sec_request_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_request_dec
</UL>

<P><STRONG><a name="[119]"></a>ble_gap_evt_timeout_dec</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, ble_gap_evt_timeout.o(i.ble_gap_evt_timeout_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gap_evt_timeout_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[3d]"></a>ble_gap_id_key_t_dec</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_id_key_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_gap_id_key_t_dec &rArr; ble_gap_irk_dec &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_addr_dec
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_irk_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gap_struct_serialization.o(i.ble_gap_sec_keys_dec)
</UL>
<P><STRONG><a name="[40]"></a>ble_gap_id_key_t_enc</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_id_key_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_gap_id_key_t_enc &rArr; ble_gap_irk_enc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_addr_enc
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_irk_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gap_struct_serialization.o(i.ble_gap_sec_keys_enc)
</UL>
<P><STRONG><a name="[16b]"></a>ble_gap_irk_dec</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ble_gap_struct_serialization.o(i.ble_gap_irk_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gap_irk_dec &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_id_key_t_dec
</UL>

<P><STRONG><a name="[3b]"></a>ble_gap_irk_enc</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ble_gap_struct_serialization.o(i.ble_gap_irk_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gap_irk_enc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_id_key_t_enc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ble_gap_sec_info_reply.o(i.ble_gap_sec_info_reply_req_enc)
<LI> ble_gap_struct_serialization.o(i.ble_gap_whitelist_t_enc)
</UL>
<P><STRONG><a name="[3a]"></a>ble_gap_lesc_p256_pk_t_dec</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ble_gap_struct_serialization.o(i.ble_gap_lesc_p256_pk_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gap_lesc_p256_pk_t_dec &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ble_gap_evt_lesc_dhkey_request.o(i.ble_gap_evt_lesc_dhkey_request_dec)
<LI> ble_gap_struct_serialization.o(i.ble_gap_sec_keys_dec)
</UL>
<P><STRONG><a name="[42]"></a>ble_gap_lesc_p256_pk_t_enc</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ble_gap_struct_serialization.o(i.ble_gap_lesc_p256_pk_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gap_lesc_p256_pk_t_enc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gap_struct_serialization.o(i.ble_gap_sec_keys_enc)
</UL>
<P><STRONG><a name="[15b]"></a>ble_gap_master_id_t_dec</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_master_id_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_gap_master_id_t_dec &rArr; uint16_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_info_request_t_dec
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_enc_key_t_dec
</UL>

<P><STRONG><a name="[15c]"></a>ble_gap_master_id_t_enc</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_master_id_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_gap_master_id_t_enc &rArr; uint16_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_enc_key_t_enc
</UL>

<P><STRONG><a name="[1fe]"></a>ble_gap_ppcp_get_req_enc</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ble_gap_ppcp_get.o(i.ble_gap_ppcp_get_req_enc))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_get
</UL>

<P><STRONG><a name="[16c]"></a>ble_gap_ppcp_get_rsp_dec</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, ble_gap_ppcp_get.o(i.ble_gap_ppcp_get_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gap_ppcp_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_ppcp_get_reply_rsp_dec
</UL>

<P><STRONG><a name="[16d]"></a>ble_gap_ppcp_set_req_enc</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, ble_gap_ppcp_set.o(i.ble_gap_ppcp_set_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gap_ppcp_set_req_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_set
</UL>

<P><STRONG><a name="[16f]"></a>ble_gap_ppcp_set_rsp_dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gap_ppcp_set.o(i.ble_gap_ppcp_set_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ble_gap_ppcp_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_ppcp_set_rsp_dec
</UL>

<P><STRONG><a name="[170]"></a>ble_gap_sec_info_reply_req_enc</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, ble_gap_sec_info_reply.o(i.ble_gap_sec_info_reply_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_gap_sec_info_reply_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_info_reply
</UL>

<P><STRONG><a name="[171]"></a>ble_gap_sec_info_reply_rsp_dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gap_sec_info_reply.o(i.ble_gap_sec_info_reply_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ble_gap_sec_info_reply_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sec_info_reply_rsp_dec
</UL>

<P><STRONG><a name="[163]"></a>ble_gap_sec_kdist_t_dec</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, ble_gap_struct_serialization.o(i.ble_gap_sec_kdist_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ble_gap_sec_kdist_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_status_t_dec
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_t_dec
</UL>

<P><STRONG><a name="[176]"></a>ble_gap_sec_kdist_t_enc</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ble_gap_struct_serialization.o(i.ble_gap_sec_kdist_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gap_sec_kdist_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_t_enc
</UL>

<P><STRONG><a name="[172]"></a>ble_gap_sec_keys_dec</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_sec_keys_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ble_gap_sec_keys_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_keyset_t_dec
</UL>

<P><STRONG><a name="[173]"></a>ble_gap_sec_keys_enc</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_sec_keys_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_gap_sec_keys_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_keyset_t_enc
</UL>

<P><STRONG><a name="[45]"></a>ble_gap_sec_keyset_t_dec</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_sec_keyset_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ble_gap_sec_keyset_t_dec &rArr; ble_gap_sec_keys_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_keys_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_status_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gap_sec_params_reply.o(i.ble_gap_sec_params_reply_rsp_dec)
</UL>
<P><STRONG><a name="[44]"></a>ble_gap_sec_keyset_t_enc</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_sec_keyset_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_gap_sec_keyset_t_enc &rArr; ble_gap_sec_keys_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_keys_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gap_sec_params_reply.o(i.ble_gap_sec_params_reply_req_enc)
</UL>
<P><STRONG><a name="[162]"></a>ble_gap_sec_levels_dec</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ble_gap_struct_serialization.o(i.ble_gap_sec_levels_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_gap_sec_levels_dec &rArr; uint8_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_status_t_dec
</UL>

<P><STRONG><a name="[174]"></a>ble_gap_sec_params_reply_req_enc</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, ble_gap_sec_params_reply.o(i.ble_gap_sec_params_reply_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_gap_sec_params_reply_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_params_reply
</UL>

<P><STRONG><a name="[175]"></a>ble_gap_sec_params_reply_rsp_dec</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, ble_gap_sec_params_reply.o(i.ble_gap_sec_params_reply_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ble_gap_sec_params_reply_rsp_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_dec
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sec_params_reply_rsp_dec
</UL>

<P><STRONG><a name="[169]"></a>ble_gap_sec_params_t_dec</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_sec_params_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_gap_sec_params_t_dec &rArr; ble_gap_sec_kdist_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_kdist_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_params_request_t_dec
</UL>

<P><STRONG><a name="[43]"></a>ble_gap_sec_params_t_enc</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, ble_gap_struct_serialization.o(i.ble_gap_sec_params_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_gap_sec_params_t_enc &rArr; ble_gap_sec_kdist_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_kdist_t_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gap_sec_params_reply.o(i.ble_gap_sec_params_reply_req_enc)
</UL>
<P><STRONG><a name="[3e]"></a>ble_gap_sign_info_dec</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ble_gap_struct_serialization.o(i.ble_gap_sign_info_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gap_sign_info_dec &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gap_struct_serialization.o(i.ble_gap_sec_keys_dec)
</UL>
<P><STRONG><a name="[41]"></a>ble_gap_sign_info_enc</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ble_gap_struct_serialization.o(i.ble_gap_sign_info_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gap_sign_info_enc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gap_struct_serialization.o(i.ble_gap_sec_keys_enc)
</UL>
<P><STRONG><a name="[39]"></a>ble_gap_whitelist_t_enc</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, ble_gap_struct_serialization.o(i.ble_gap_whitelist_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_gap_whitelist_t_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gap_adv_start.o(i.ble_gap_adv_start_req_enc)
</UL>
<P><STRONG><a name="[46]"></a>ble_gattc_attr_info_t_128_dec</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ble_gattc_struct_serialization.o(i.ble_gattc_attr_info_t_128_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gattc_attr_info_t_128_dec &rArr; ble_uuid128_t_dec &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid128_t_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gattc_struct_serialization.o(i.ble_gattc_evt_attr_info_disc_rsp_t_dec)
</UL>
<P><STRONG><a name="[47]"></a>ble_gattc_attr_info_t_16_dec</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ble_gattc_struct_serialization.o(i.ble_gattc_attr_info_t_16_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ble_gattc_attr_info_t_16_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gattc_struct_serialization.o(i.ble_gattc_evt_attr_info_disc_rsp_t_dec)
</UL>
<P><STRONG><a name="[12b]"></a>ble_gattc_evt_attr_info_disc_rsp_dec</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, ble_gattc_evt_attr_info_disc_rsp.o(i.ble_gattc_evt_attr_info_disc_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_gattc_evt_attr_info_disc_rsp_dec &rArr; ble_gattc_evt_attr_info_disc_rsp_t_dec &rArr; uint8_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_attr_info_disc_rsp_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[179]"></a>ble_gattc_evt_attr_info_disc_rsp_t_dec</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, ble_gattc_struct_serialization.o(i.ble_gattc_evt_attr_info_disc_rsp_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_gattc_evt_attr_info_disc_rsp_t_dec &rArr; uint8_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_attr_info_disc_rsp_dec
</UL>

<P><STRONG><a name="[121]"></a>ble_gattc_evt_char_disc_rsp_dec</STRONG> (Thumb, 388 bytes, Stack size 72 bytes, ble_gattc_evt_char_disc_rsp.o(i.ble_gattc_evt_char_disc_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ble_gattc_evt_char_disc_rsp_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[122]"></a>ble_gattc_evt_char_val_by_uuid_read_rsp_dec</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, ble_gattc_evt_char_val_by_uuid_read_rsp.o(i.ble_gattc_evt_char_val_by_uuid_read_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = ble_gattc_evt_char_val_by_uuid_read_rsp_dec &rArr; ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[17a]"></a>ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, ble_gattc_struct_serialization.o(i.ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_val_by_uuid_read_rsp_dec
</UL>

<P><STRONG><a name="[129]"></a>ble_gattc_evt_char_vals_read_rsp_dec</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, ble_gattc_evt_char_vals_read_rsp.o(i.ble_gattc_evt_char_vals_read_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ble_gattc_evt_char_vals_read_rsp_dec &rArr; ble_gattc_evt_char_vals_read_rsp_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_vals_read_rsp_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[17b]"></a>ble_gattc_evt_char_vals_read_rsp_t_dec</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, ble_gattc_struct_serialization.o(i.ble_gattc_evt_char_vals_read_rsp_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_gattc_evt_char_vals_read_rsp_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_vals_read_rsp_dec
</UL>

<P><STRONG><a name="[123]"></a>ble_gattc_evt_desc_disc_rsp_dec</STRONG> (Thumb, 242 bytes, Stack size 56 bytes, ble_gattc_evt_desc_disc_rsp.o(i.ble_gattc_evt_desc_disc_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ble_gattc_evt_desc_disc_rsp_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[126]"></a>ble_gattc_evt_hvx_dec</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, ble_gattc_evt_hvx.o(i.ble_gattc_evt_hvx_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gattc_evt_hvx_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[124]"></a>ble_gattc_evt_prim_srvc_disc_rsp_dec</STRONG> (Thumb, 258 bytes, Stack size 56 bytes, ble_gattc_evt_prim_srvc_disc_rsp.o(i.ble_gattc_evt_prim_srvc_disc_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ble_gattc_evt_prim_srvc_disc_rsp_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[125]"></a>ble_gattc_evt_read_rsp_dec</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, ble_gattc_evt_read_rsp.o(i.ble_gattc_evt_read_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gattc_evt_read_rsp_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[12a]"></a>ble_gattc_evt_rel_disc_rsp_dec</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, ble_gattc_evt_rel_disc_rsp.o(i.ble_gattc_evt_rel_disc_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = ble_gattc_evt_rel_disc_rsp_dec &rArr; ble_gattc_evt_rel_disc_rsp_t_dec &rArr; ble_gattc_include_t_dec &rArr; ble_gattc_service_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_rel_disc_rsp_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[17c]"></a>ble_gattc_evt_rel_disc_rsp_t_dec</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, ble_gattc_struct_serialization.o(i.ble_gattc_evt_rel_disc_rsp_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = ble_gattc_evt_rel_disc_rsp_t_dec &rArr; ble_gattc_include_t_dec &rArr; ble_gattc_service_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_include_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_rel_disc_rsp_dec
</UL>

<P><STRONG><a name="[127]"></a>ble_gattc_evt_timeout_dec</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, ble_gattc_evt_timeout.o(i.ble_gattc_evt_timeout_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gattc_evt_timeout_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[128]"></a>ble_gattc_evt_write_rsp_dec</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, ble_gattc_evt_write_rsp.o(i.ble_gattc_evt_write_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gattc_evt_write_rsp_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[17e]"></a>ble_gattc_handle_range_t_dec</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, ble_gattc_struct_serialization.o(i.ble_gattc_handle_range_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_gattc_handle_range_t_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_service_t_dec
</UL>

<P><STRONG><a name="[17d]"></a>ble_gattc_include_t_dec</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, ble_gattc_struct_serialization.o(i.ble_gattc_include_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ble_gattc_include_t_dec &rArr; ble_gattc_service_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_service_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_rel_disc_rsp_t_dec
</UL>

<P><STRONG><a name="[17f]"></a>ble_gattc_service_t_dec</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, ble_gattc_struct_serialization.o(i.ble_gattc_service_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = ble_gattc_service_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_dec
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_handle_range_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_include_t_dec
</UL>

<P><STRONG><a name="[4c]"></a>ble_gatts_attr_enc</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ble_gatts_struct_serialization.o(i.ble_gatts_attr_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ble_gatts_attr_enc &rArr; len16data_enc &rArr; buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_enc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ble_gatts_descriptor_add.o(i.ble_gatts_descriptor_add_req_enc)
<LI> ble_gatts_characteristic_add.o(i.ble_gatts_characteristic_add_req_enc)
</UL>
<P><STRONG><a name="[49]"></a>ble_gatts_attr_md_enc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ble_gatts_struct_serialization.o(i.ble_gatts_attr_md_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gatts_attr_md_enc &rArr; ble_gap_conn_sec_mode_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_sec_mode_enc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ble_gatts_struct_serialization.o(i.ble_gatts_attr_enc)
<LI> ble_gatts_struct_serialization.o(i.ble_gatts_char_md_enc)
</UL>
<P><STRONG><a name="[4d]"></a>ble_gatts_char_handles_dec</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, ble_gatts_struct_serialization.o(i.ble_gatts_char_handles_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_gatts_char_handles_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatts_characteristic_add.o(i.ble_gatts_characteristic_add_rsp_dec)
</UL>
<P><STRONG><a name="[4b]"></a>ble_gatts_char_md_enc</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, ble_gatts_struct_serialization.o(i.ble_gatts_char_md_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ble_gatts_char_md_enc &rArr; len16data_enc &rArr; buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatts_characteristic_add.o(i.ble_gatts_characteristic_add_req_enc)
</UL>
<P><STRONG><a name="[181]"></a>ble_gatts_characteristic_add_req_enc</STRONG> (Thumb, 138 bytes, Stack size 64 bytes, ble_gatts_characteristic_add.o(i.ble_gatts_characteristic_add_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_gatts_characteristic_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
</UL>

<P><STRONG><a name="[182]"></a>ble_gatts_characteristic_add_rsp_dec</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, ble_gatts_characteristic_add.o(i.ble_gatts_characteristic_add_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ble_gatts_characteristic_add_rsp_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_dec
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_characteristic_add_rsp_dec
</UL>

<P><STRONG><a name="[183]"></a>ble_gatts_descriptor_add_req_enc</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, ble_gatts_descriptor_add.o(i.ble_gatts_descriptor_add_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_gatts_descriptor_add_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_descriptor_add
</UL>

<P><STRONG><a name="[184]"></a>ble_gatts_descriptor_add_rsp_dec</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, ble_gatts_descriptor_add.o(i.ble_gatts_descriptor_add_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gatts_descriptor_add_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_descriptor_add_rsp_dec
</UL>

<P><STRONG><a name="[10a]"></a>ble_gatts_enable_params_t_enc</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, ble_gatts_struct_serialization.o(i.ble_gatts_enable_params_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_gatts_enable_params_t_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_enable_params_t_enc
</UL>

<P><STRONG><a name="[12f]"></a>ble_gatts_evt_hvc_dec</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, ble_gatts_evt_hvc.o(i.ble_gatts_evt_hvc_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gatts_evt_hvc_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[186]"></a>ble_gatts_evt_read_t_dec</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, ble_gatts_struct_serialization.o(i.ble_gatts_evt_read_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ble_gatts_evt_read_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_t_dec
</UL>

<P><STRONG><a name="[131]"></a>ble_gatts_evt_rw_authorize_request_dec</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, ble_gatts_evt_rw_authorize_request.o(i.ble_gatts_evt_rw_authorize_request_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = ble_gatts_evt_rw_authorize_request_dec &rArr; ble_gatts_evt_rw_authorize_request_t_dec &rArr; ble_gatts_evt_write_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_user_mem_context_find
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_dec
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[187]"></a>ble_gatts_evt_rw_authorize_request_t_dec</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, ble_gatts_struct_serialization.o(i.ble_gatts_evt_rw_authorize_request_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ble_gatts_evt_rw_authorize_request_t_dec &rArr; ble_gatts_evt_write_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_read_t_dec
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_dec
</UL>

<P><STRONG><a name="[12e]"></a>ble_gatts_evt_sc_confirm_dec</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, ble_gatts_evt_sc_confirm.o(i.ble_gatts_evt_sc_confirm_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_gatts_evt_sc_confirm_dec &rArr; uint16_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[130]"></a>ble_gatts_evt_sys_attr_missing_dec</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, ble_gatts_evt_sys_attr_missing.o(i.ble_gatts_evt_sys_attr_missing_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gatts_evt_sys_attr_missing_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[12d]"></a>ble_gatts_evt_timeout_dec</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, ble_gatts_evt_timeout.o(i.ble_gatts_evt_timeout_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gatts_evt_timeout_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[12c]"></a>ble_gatts_evt_write_dec</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, ble_gatts_evt_write.o(i.ble_gatts_evt_write_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = ble_gatts_evt_write_dec &rArr; ble_gatts_evt_write_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_user_mem_context_find
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_dec
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[188]"></a>ble_gatts_evt_write_t_dec</STRONG> (Thumb, 226 bytes, Stack size 72 bytes, ble_gatts_struct_serialization.o(i.ble_gatts_evt_write_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = ble_gatts_evt_write_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_dec
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_dec
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_dec
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_t_dec
</UL>

<P><STRONG><a name="[189]"></a>ble_gatts_hvx_req_enc</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, ble_gatts_hvx.o(i.ble_gatts_hvx_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_gatts_hvx_req_enc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_hvx
</UL>

<P><STRONG><a name="[18b]"></a>ble_gatts_hvx_rsp_dec</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, ble_gatts_hvx.o(i.ble_gatts_hvx_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ble_gatts_hvx_rsp_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_dec
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_hvx_rsp_dec
</UL>

<P><STRONG><a name="[201]"></a>ble_gatts_service_add_req_enc</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, ble_gatts_service_add.o(i.ble_gatts_service_add_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ble_gatts_service_add_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
</UL>

<P><STRONG><a name="[18c]"></a>ble_gatts_service_add_rsp_dec</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, ble_gatts_service_add.o(i.ble_gatts_service_add_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_gatts_service_add_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_service_add_rsp_dec
</UL>

<P><STRONG><a name="[18d]"></a>ble_gatts_service_changed_req_enc</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, ble_gatts_service_changed.o(i.ble_gatts_service_changed_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gatts_service_changed_req_enc &rArr; uint16_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_changed
</UL>

<P><STRONG><a name="[18e]"></a>ble_gatts_service_changed_rsp_dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gatts_service_changed.o(i.ble_gatts_service_changed_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ble_gatts_service_changed_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_service_changed_rsp_dec
</UL>

<P><STRONG><a name="[18f]"></a>ble_gatts_sys_attr_get_req_enc</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, ble_gatts_sys_attr_get.o(i.ble_gatts_sys_attr_get_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_gatts_sys_attr_get_req_enc &rArr; uint32_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_get
</UL>

<P><STRONG><a name="[190]"></a>ble_gatts_sys_attr_get_rsp_dec</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, ble_gatts_sys_attr_get.o(i.ble_gatts_sys_attr_get_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_gatts_sys_attr_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_sys_attr_get_rsp_dec
</UL>

<P><STRONG><a name="[191]"></a>ble_gatts_sys_attr_set_req_enc</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, ble_gatts_sys_attr_set.o(i.ble_gatts_sys_attr_set_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_gatts_sys_attr_set_req_enc &rArr; uint32_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_t_enc
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_set
</UL>

<P><STRONG><a name="[192]"></a>ble_gatts_sys_attr_set_rsp_dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gatts_sys_attr_set.o(i.ble_gatts_sys_attr_set_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ble_gatts_sys_attr_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_sys_attr_set_rsp_dec
</UL>

<P><STRONG><a name="[193]"></a>ble_gatts_value_set_req_enc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ble_gatts_value_set.o(i.ble_gatts_value_set_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_gatts_value_set_req_enc &rArr; cond_field_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_set
</UL>

<P><STRONG><a name="[194]"></a>ble_gatts_value_set_rsp_dec</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, ble_gatts_value_set.o(i.ble_gatts_value_set_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = ble_gatts_value_set_rsp_dec &rArr; ble_gatts_value_t_dec &rArr; buf_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_value_set_rsp_dec
</UL>

<P><STRONG><a name="[195]"></a>ble_gatts_value_t_dec</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, ble_gatts_struct_serialization.o(i.ble_gatts_value_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ble_gatts_value_t_dec &rArr; buf_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_set_rsp_dec
</UL>

<P><STRONG><a name="[4f]"></a>ble_gatts_value_t_enc</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, ble_gatts_struct_serialization.o(i.ble_gatts_value_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_gatts_value_t_enc &rArr; buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_enc
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatts_value_set.o(i.ble_gatts_value_set_req_enc)
</UL>
<P><STRONG><a name="[198]"></a>ble_hrs_heart_rate_measurement_send</STRONG> (Thumb, 94 bytes, Stack size 56 bytes, ble_hrs.o(i.ble_hrs_heart_rate_measurement_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = ble_hrs_heart_rate_measurement_send &rArr; sd_ble_gatts_hvx &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrm_encode
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_hvx
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_meas_timeout_handler
</UL>

<P><STRONG><a name="[19a]"></a>ble_hrs_init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ble_hrs.o(i.ble_hrs_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ble_hrs_init &rArr; heart_rate_measurement_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_measurement_char_add
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;body_sensor_location_char_add
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[136]"></a>ble_hrs_on_ble_evt</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, ble_hrs.o(i.ble_hrs_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_hrs_on_ble_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[19d]"></a>ble_hrs_rr_interval_add</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ble_hrs.o(i.ble_hrs_rr_interval_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_hrs_rr_interval_add &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rr_interval_timeout_handler
</UL>

<P><STRONG><a name="[211]"></a>ble_hrs_sensor_contact_detected_update</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_hrs.o(i.ble_hrs_sensor_contact_detected_update))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_contact_detected_timeout_handler
</UL>

<P><STRONG><a name="[132]"></a>ble_l2cap_evt_rx_dec</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, ble_l2cap_evt_rx.o(i.ble_l2cap_evt_rx_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ble_l2cap_evt_rx_dec &rArr; ble_l2cap_evt_rx_t_dec &rArr; ble_l2cap_header_t_dec &rArr; uint16_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
</UL>

<P><STRONG><a name="[19f]"></a>ble_l2cap_evt_rx_t_dec</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, ble_struct_serialization.o(i.ble_l2cap_evt_rx_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_l2cap_evt_rx_t_dec &rArr; ble_l2cap_header_t_dec &rArr; uint16_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_header_t_dec
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_dec
</UL>

<P><STRONG><a name="[1a0]"></a>ble_l2cap_header_t_dec</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ble_struct_serialization.o(i.ble_l2cap_header_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_l2cap_header_t_dec &rArr; uint16_t_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_t_dec
</UL>

<P><STRONG><a name="[1a1]"></a>ble_srv_ascii_to_utf8</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ble_srv_common.o(i.ble_srv_ascii_to_utf8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_srv_ascii_to_utf8
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[e4]"></a>ble_srv_report_ref_encode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ble_srv_common.o(i.ble_srv_report_ref_encode))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_char_add
</UL>

<P><STRONG><a name="[177]"></a>ble_uuid128_t_dec</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ble_struct_serialization.o(i.ble_uuid128_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_uuid128_t_dec &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_attr_info_t_128_dec
</UL>

<P><STRONG><a name="[203]"></a>ble_uuid_encode_req_enc</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ble_uuid_encode.o(i.ble_uuid_encode_req_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_uuid_encode_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_uuid_encode
</UL>

<P><STRONG><a name="[1aa]"></a>ble_uuid_encode_rsp_dec</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, ble_uuid_encode.o(i.ble_uuid_encode_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_uuid_encode_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_encode_rsp_dec
</UL>

<P><STRONG><a name="[178]"></a>ble_uuid_t_dec</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ble_struct_serialization.o(i.ble_uuid_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_service_t_dec
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_attr_info_t_16_dec
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_read_t_dec
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_t_dec
</UL>

<P><STRONG><a name="[48]"></a>ble_uuid_t_enc</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, ble_struct_serialization.o(i.ble_uuid_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_uuid_t_enc &rArr; uint16_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatts_struct_serialization.o(i.ble_gatts_attr_enc)
</UL>
<P><STRONG><a name="[1ab]"></a>bond_data_load</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, device_manager_peripheral.o(i.bond_data_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bond_data_load &rArr; pstorage_load &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[1ae]"></a>bsp_btn_ble_init</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, bsp_btn_ble.o(i.bsp_btn_ble_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_btn_ble_init &rArr; advertising_buttons_configure &rArr; bsp_event_to_button_action_assign
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_buttons_configure
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_button_is_pressed
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[138]"></a>bsp_btn_ble_on_ble_evt</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, bsp_btn_ble.o(i.bsp_btn_ble_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bsp_btn_ble_on_ble_evt &rArr; advertising_buttons_configure &rArr; bsp_event_to_button_action_assign
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_buttons_configure
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[1b0]"></a>bsp_btn_ble_sleep_mode_prepare</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_btn_ble.o(i.bsp_btn_ble_sleep_mode_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_btn_ble_sleep_mode_prepare &rArr; bsp_wakeup_buttons_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wakeup_buttons_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
</UL>

<P><STRONG><a name="[1af]"></a>bsp_button_is_pressed</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, bsp.o(i.bsp_button_is_pressed))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_init
</UL>

<P><STRONG><a name="[5a]"></a>bsp_event_handler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, main.o(i.bsp_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = bsp_event_handler &rArr; ble_advertising_restart_without_whitelist &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_disconnect
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_restart_without_whitelist
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[ba]"></a>bsp_event_to_button_action_assign</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, bsp.o(i.bsp_event_to_button_action_assign))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_buttons_configure
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
</UL>

<P><STRONG><a name="[139]"></a>bsp_indication_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp.o(i.bsp_indication_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bsp_indication_set &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[1b5]"></a>bsp_init</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, bsp.o(i.bsp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = bsp_init &rArr; app_button_init &rArr; nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b1]"></a>bsp_wakeup_buttons_set</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, bsp.o(i.bsp_wakeup_buttons_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_wakeup_buttons_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_sleep_mode_prepare
</UL>

<P><STRONG><a name="[196]"></a>buf_dec</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, ble_serialization.o(i.buf_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = buf_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_dec
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_t_dec
</UL>

<P><STRONG><a name="[197]"></a>buf_enc</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, ble_serialization.o(i.buf_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len8data_enc
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_enc
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_t_enc
</UL>

<P><STRONG><a name="[165]"></a>cond_field_dec</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, cond_field_serialization.o(i.cond_field_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_reply_rsp_dec
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_lesc_dhkey_request_dec
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_hvx_rsp_dec
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_rsp_dec
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_keys_dec
</UL>

<P><STRONG><a name="[fc]"></a>cond_field_enc</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, cond_field_serialization.o(i.cond_field_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cond_field_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_reply_req_enc
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_info_reply_req_enc
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_start_req_enc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_enable_req_enc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_whitelist_t_enc
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_set_req_enc
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_descriptor_add_req_enc
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_req_enc
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_keys_enc
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_char_md_enc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_enc
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_enable_params_t_enc
</UL>

<P><STRONG><a name="[135]"></a>dm_ble_evt_handler</STRONG> (Thumb, 1110 bytes, Stack size 112 bytes, device_manager_peripheral.o(i.dm_ble_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = dm_ble_evt_handler &rArr; sd_ble_gap_sec_params_reply &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_params_reply
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_info_reply
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_handle_initialize
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_data_load
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_find
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_context_store
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_init
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_find
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_evt_notify
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[1c3]"></a>dm_handle_initialize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.dm_handle_initialize))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
</UL>

<P><STRONG><a name="[1c1]"></a>dm_init</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, device_manager_peripheral.o(i.dm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dm_init &rArr; pstorage_clear &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
</UL>

<P><STRONG><a name="[1c2]"></a>dm_register</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, device_manager_peripheral.o(i.dm_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dm_register
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
</UL>

<P><STRONG><a name="[f2]"></a>fs_queued_op_count_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fstorage.o(i.fs_queued_op_count_get))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[166]"></a>int8_dec</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, ble_serialization.o(i.int8_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = int8_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_rssi_changed_dec
</UL>

<P><STRONG><a name="[aa]"></a>intern_softdevice_events_execute</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, softdevice_handler.o(i.intern_softdevice_events_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = intern_softdevice_events_execute &rArr; sd_ble_evt_get &rArr; app_mailbox_get &rArr; app_mailbox_sized_get &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_evt_get
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_evt_get
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_EGU2_IRQHandler
</UL>

<P><STRONG><a name="[155]"></a>len16data_dec</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, ble_serialization.o(i.len16data_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = len16data_dec &rArr; buf_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_dec
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_get_rsp_dec
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_dec
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_dec
</UL>

<P><STRONG><a name="[180]"></a>len16data_enc</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, ble_serialization.o(i.len16data_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = len16data_enc &rArr; buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_enc
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_char_md_enc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_enc
</UL>

<P><STRONG><a name="[147]"></a>len8data_enc</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, ble_serialization.o(i.len8data_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = len8data_enc &rArr; buf_enc &rArr; uint8_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_enc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_data_set_req_enc
</UL>

<P><STRONG><a name="[1d6]"></a>log_rtt_init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, nrf_log.o(i.log_rtt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = log_rtt_init &rArr; SEGGER_RTT_ConfigUpBuffer &rArr; _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ConfigUpBuffer
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ConfigDownBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
</UL>

<P><STRONG><a name="[1d7]"></a>log_rtt_printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, nrf_log.o(i.log_rtt_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = log_rtt_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_check_ram_start
</UL>

<P><STRONG><a name="[2f]"></a>main</STRONG> (Thumb, 238 bytes, Stack size 96 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = main &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_app_evt_wait
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_init
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_simulator_init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;application_timers_start
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[1dc]"></a>nrf_delay_ms</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, nrf_delay.o(i.nrf_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_delay
</UL>

<P><STRONG><a name="[1e2]"></a>nrf_drv_common_irq_enable</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, nrf_drv_common.o(i.nrf_drv_common_irq_enable))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>

<P><STRONG><a name="[bc]"></a>nrf_drv_gpiote_in_event_enable</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_event_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrf_drv_gpiote_in_event_enable &rArr; nrf_gpiote_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_port
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_clear
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_enable
</UL>

<P><STRONG><a name="[c0]"></a>nrf_drv_gpiote_in_init</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = nrf_drv_gpiote_in_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
</UL>

<P><STRONG><a name="[1b8]"></a>nrf_drv_gpiote_in_is_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_in_is_set))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_event_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_delay_timeout_handler
</UL>

<P><STRONG><a name="[bf]"></a>nrf_drv_gpiote_init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_gpiote_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
</UL>

<P><STRONG><a name="[be]"></a>nrf_drv_gpiote_is_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_is_init))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_button_init
</UL>

<P><STRONG><a name="[d6]"></a>nrf_drv_uart_init</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, nrf_drv_uart.o(i.nrf_drv_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = nrf_drv_uart_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[d8]"></a>nrf_drv_uart_rx</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, nrf_drv_uart.o(i.nrf_drv_uart_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nrf_drv_uart_rx &rArr; nrf_drv_uart_rx_for_uarte
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx_for_uarte
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx_for_uart
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_event_handler
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[d7]"></a>nrf_drv_uart_rx_enable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, nrf_drv_uart.o(i.nrf_drv_uart_rx_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_uart_rx_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[da]"></a>nrf_drv_uart_tx</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, nrf_drv_uart.o(i.nrf_drv_uart_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx_in_progress
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uarte_event_check
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx_for_uart
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_put
</UL>

<P><STRONG><a name="[1e9]"></a>nrf_drv_uart_tx_in_progress</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrf_drv_uart.o(i.nrf_drv_uart_tx_in_progress))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx
</UL>

<P><STRONG><a name="[77]"></a>os_rsp_set_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ser_softdevice_handler.o(i.os_rsp_set_handler))
<BR>[Address Reference Count : 1]<UL><LI> ser_softdevice_handler.o(i.sd_softdevice_enable)
</UL>
<P><STRONG><a name="[207]"></a>power_system_off_req_enc</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, power_system_off.o(i.power_system_off_req_enc))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_power_system_off
</UL>

<P><STRONG><a name="[f1]"></a>pstorage_access_status_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pstorage_nosd.o(i.pstorage_access_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[1ac]"></a>pstorage_block_identifier_get</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, pstorage_nosd.o(i.pstorage_block_identifier_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pstorage_block_identifier_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_data_load
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_context_store
</UL>

<P><STRONG><a name="[1bd]"></a>pstorage_clear</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, pstorage_nosd.o(i.pstorage_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pstorage_clear &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
</UL>

<P><STRONG><a name="[1c0]"></a>pstorage_init</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, pstorage_nosd.o(i.pstorage_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pstorage_init &rArr; pstorage_flash_page_end
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
</UL>

<P><STRONG><a name="[1ad]"></a>pstorage_load</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, pstorage_nosd.o(i.pstorage_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pstorage_load &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_data_load
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_load
</UL>

<P><STRONG><a name="[1c9]"></a>pstorage_register</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, pstorage_nosd.o(i.pstorage_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pstorage_register &rArr; pstorage_flash_page_end
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
</UL>

<P><STRONG><a name="[57]"></a>pstorage_store</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, pstorage_nosd.o(i.pstorage_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pstorage_store &rArr; ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_block_write
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify
</UL>
<BR>[Address Reference Count : 2]<UL><LI> device_manager_peripheral.o(i.gatts_context_store)
<LI> device_manager_peripheral.o(i.device_context_store)
</UL>
<P><STRONG><a name="[226]"></a>pstorage_sys_event_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pstorage_nosd.o(i.pstorage_sys_event_handler))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
</UL>

<P><STRONG><a name="[56]"></a>pstorage_update</STRONG> (Thumb, 354 bytes, Stack size 56 bytes, pstorage_nosd.o(i.pstorage_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = pstorage_update &rArr; ble_flash_block_write &rArr; flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_block_write
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify
</UL>
<BR>[Address Reference Count : 2]<UL><LI> device_manager_peripheral.o(i.gatts_context_store)
<LI> device_manager_peripheral.o(i.device_context_store)
</UL>
<P><STRONG><a name="[1cb]"></a>sd_app_evt_wait</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, nrf_soc.o(i.sd_app_evt_wait))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_write
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_rsp_wait
</UL>

<P><STRONG><a name="[1f4]"></a>sd_ble_enable</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_mw_ble.o(i.sd_ble_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = sd_ble_enable &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_enable_req_enc
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable
</UL>

<P><STRONG><a name="[1d3]"></a>sd_ble_evt_get</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ser_softdevice_handler.o(i.sd_ble_evt_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sd_ble_evt_get &rArr; app_mailbox_get &rArr; app_mailbox_sized_get &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_get
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>

<P><STRONG><a name="[104]"></a>sd_ble_gap_address_get</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_mw_ble_gap.o(i.sd_ble_gap_address_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = sd_ble_gap_address_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_address_get_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_addr_encode
</UL>

<P><STRONG><a name="[e9]"></a>sd_ble_gap_adv_data_set</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, app_mw_ble_gap.o(i.sd_ble_gap_adv_data_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sd_ble_gap_adv_data_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_data_set_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>

<P><STRONG><a name="[f5]"></a>sd_ble_gap_adv_start</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_mw_ble_gap.o(i.sd_ble_gap_adv_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = sd_ble_gap_adv_start &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_start_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[f0]"></a>sd_ble_gap_adv_stop</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_mw_ble_gap.o(i.sd_ble_gap_adv_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = sd_ble_gap_adv_stop &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_stop_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_restart_without_whitelist
</UL>

<P><STRONG><a name="[b2]"></a>sd_ble_gap_appearance_get</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_mw_ble_gap.o(i.sd_ble_gap_appearance_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = sd_ble_gap_appearance_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_get_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[1ce]"></a>sd_ble_gap_appearance_set</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_mw_ble_gap.o(i.sd_ble_gap_appearance_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = sd_ble_gap_appearance_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_set_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[1fb]"></a>sd_ble_gap_conn_param_update</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, app_mw_ble_gap.o(i.sd_ble_gap_conn_param_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = sd_ble_gap_conn_param_update &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_param_update_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_timeout_handler
</UL>

<P><STRONG><a name="[1db]"></a>sd_ble_gap_device_name_get</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, app_mw_ble_gap.o(i.sd_ble_gap_device_name_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = sd_ble_gap_device_name_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_get_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_encode
</UL>

<P><STRONG><a name="[1cd]"></a>sd_ble_gap_device_name_set</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, app_mw_ble_gap.o(i.sd_ble_gap_device_name_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = sd_ble_gap_device_name_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_set_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[1b3]"></a>sd_ble_gap_disconnect</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, app_mw_ble_gap.o(i.sd_ble_gap_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = sd_ble_gap_disconnect &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_conn_params_evt
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_timeout_handler
</UL>

<P><STRONG><a name="[101]"></a>sd_ble_gap_ppcp_get</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_mw_ble_gap.o(i.sd_ble_gap_ppcp_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = sd_ble_gap_ppcp_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_get_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
</UL>

<P><STRONG><a name="[100]"></a>sd_ble_gap_ppcp_set</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_mw_ble_gap.o(i.sd_ble_gap_ppcp_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = sd_ble_gap_ppcp_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_set_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[1c5]"></a>sd_ble_gap_sec_info_reply</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, app_mw_ble_gap.o(i.sd_ble_gap_sec_info_reply))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sd_ble_gap_sec_info_reply &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_info_reply_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[1c6]"></a>sd_ble_gap_sec_params_reply</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, app_mw_ble_gap.o(i.sd_ble_gap_sec_params_reply))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sd_ble_gap_sec_params_reply &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_sec_context_create
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_reply_req_enc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[e3]"></a>sd_ble_gatts_characteristic_add</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, app_mw_ble_gatts.o(i.sd_ble_gatts_characteristic_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sd_ble_gatts_characteristic_add &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_char_add
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_measurement_char_add
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;body_sensor_location_char_add
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_add
</UL>

<P><STRONG><a name="[e5]"></a>sd_ble_gatts_descriptor_add</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, app_mw_ble_gatts.o(i.sd_ble_gatts_descriptor_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = sd_ble_gatts_descriptor_add &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_descriptor_add_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_char_add
</UL>

<P><STRONG><a name="[f7]"></a>sd_ble_gatts_hvx</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, app_mw_ble_gatts.o(i.sd_ble_gatts_hvx))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = sd_ble_gatts_hvx &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_hvx_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_heart_rate_measurement_send
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_battery_level_update
</UL>

<P><STRONG><a name="[f9]"></a>sd_ble_gatts_service_add</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, app_mw_ble_gatts.o(i.sd_ble_gatts_service_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = sd_ble_gatts_service_add &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_add_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_init
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dis_init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_init
</UL>

<P><STRONG><a name="[1d0]"></a>sd_ble_gatts_service_changed</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, app_mw_ble_gatts.o(i.sd_ble_gatts_service_changed))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = sd_ble_gatts_service_changed &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_changed_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_apply
</UL>

<P><STRONG><a name="[1d1]"></a>sd_ble_gatts_sys_attr_get</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, app_mw_ble_gatts.o(i.sd_ble_gatts_sys_attr_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sd_ble_gatts_sys_attr_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_get_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
</UL>

<P><STRONG><a name="[1cf]"></a>sd_ble_gatts_sys_attr_set</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, app_mw_ble_gatts.o(i.sd_ble_gatts_sys_attr_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sd_ble_gatts_sys_attr_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_set_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_apply
</UL>

<P><STRONG><a name="[f6]"></a>sd_ble_gatts_value_set</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, app_mw_ble_gatts.o(i.sd_ble_gatts_value_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = sd_ble_gatts_value_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_set_req_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_battery_level_update
</UL>

<P><STRONG><a name="[202]"></a>sd_ble_uuid_encode</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, app_mw_ble.o(i.sd_ble_uuid_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_encode_req_enc
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_sized_encode
</UL>

<P><STRONG><a name="[1a6]"></a>sd_check_ram_start</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, softdevice_handler.o(i.sd_check_ram_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = sd_check_ram_start &rArr; log_rtt_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_rtt_printf
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ram_end_address_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[1d2]"></a>sd_evt_get</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ser_softdevice_handler.o(i.sd_evt_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sd_evt_get &rArr; app_mailbox_get &rArr; app_mailbox_sized_get &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_get
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>

<P><STRONG><a name="[205]"></a>sd_power_system_off</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_mw_nrf_soc.o(i.sd_power_system_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = sd_power_system_off &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_power_system_off_set
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_system_off_req_enc
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
</UL>

<P><STRONG><a name="[209]"></a>sd_softdevice_enable</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, ser_softdevice_handler.o(i.sd_softdevice_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = sd_softdevice_enable &rArr; ser_sd_transport_open &rArr; ser_hal_transport_open &rArr; ser_phy_open &rArr; app_uart_init &rArr; nrf_drv_uart_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_create
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_nrf_reset_pin_set
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_nrf_reset_pin_clear
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_nrf_evt_irq_priority_set
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_hw_init
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_delay
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_open
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
</UL>

<P><STRONG><a name="[214]"></a>sensorsim_decrement</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sensorsim.o(i.sensorsim_decrement))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sensorsim_decrement
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorsim_measure
</UL>

<P><STRONG><a name="[213]"></a>sensorsim_increment</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sensorsim.o(i.sensorsim_increment))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sensorsim_increment
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorsim_measure
</UL>

<P><STRONG><a name="[212]"></a>sensorsim_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sensorsim.o(i.sensorsim_init))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_simulator_init
</UL>

<P><STRONG><a name="[e6]"></a>sensorsim_measure</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sensorsim.o(i.sensorsim_measure))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sensorsim_measure &rArr; sensorsim_increment
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorsim_increment
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorsim_decrement
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rr_interval_timeout_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_meas_timeout_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_level_meas_timeout_handler
</UL>

<P><STRONG><a name="[20c]"></a>ser_app_hal_delay</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(i.ser_app_hal_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ser_app_hal_delay &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>

<P><STRONG><a name="[20a]"></a>ser_app_hal_hw_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(i.ser_app_hal_hw_init))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>

<P><STRONG><a name="[210]"></a>ser_app_hal_nrf_evt_irq_priority_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(i.ser_app_hal_nrf_evt_irq_priority_set))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>

<P><STRONG><a name="[225]"></a>ser_app_hal_nrf_evt_pending</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(i.ser_app_hal_nrf_evt_pending))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_softdevice_flash_operation_success_evt
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_softdevice_evt_handler
</UL>

<P><STRONG><a name="[20b]"></a>ser_app_hal_nrf_reset_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(i.ser_app_hal_nrf_reset_pin_clear))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>

<P><STRONG><a name="[20f]"></a>ser_app_hal_nrf_reset_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ser_app_hal_nrf51.o(i.ser_app_hal_nrf_reset_pin_set))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>

<P><STRONG><a name="[221]"></a>ser_app_power_system_off_enter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ser_app_power_system_off.o(i.ser_app_power_system_off_enter))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_hal_handler
</UL>

<P><STRONG><a name="[220]"></a>ser_app_power_system_off_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ser_app_power_system_off.o(i.ser_app_power_system_off_get))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_hal_handler
</UL>

<P><STRONG><a name="[208]"></a>ser_app_power_system_off_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ser_app_power_system_off.o(i.ser_app_power_system_off_set))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_power_system_off
</UL>

<P><STRONG><a name="[10d]"></a>ser_ble_cmd_rsp_dec</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ble_serialization.o(i.ser_ble_cmd_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_info_reply_rsp_dec
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_set_rsp_dec
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect_rsp_dec
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_set_rsp_dec
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_param_update_rsp_dec
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_set_rsp_dec
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_stop_rsp_dec
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_start_rsp_dec
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_data_set_rsp_dec
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_enable_rsp_dec
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_set_rsp_dec
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_changed_rsp_dec
</UL>

<P><STRONG><a name="[144]"></a>ser_ble_cmd_rsp_result_code_dec</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, ble_serialization.o(i.ser_ble_cmd_rsp_result_code_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_reply_rsp_dec
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_get_rsp_dec
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_get_rsp_dec
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_get_rsp_dec
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_address_get_rsp_dec
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_encode_rsp_dec
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_cmd_rsp_dec
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_set_rsp_dec
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_get_rsp_dec
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_add_rsp_dec
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_hvx_rsp_dec
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_descriptor_add_rsp_dec
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_rsp_dec
</UL>

<P><STRONG><a name="[4a]"></a>ser_ble_gatts_char_pf_enc</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, ble_gatts_struct_serialization.o(i.ser_ble_gatts_char_pf_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ser_ble_gatts_char_pf_enc &rArr; uint16_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_t_enc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint8_t_enc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatts_struct_serialization.o(i.ble_gatts_char_md_enc)
</UL>
<P><STRONG><a name="[215]"></a>ser_hal_transport_open</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ser_hal_transport.o(i.ser_hal_transport_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ser_hal_transport_open &rArr; ser_phy_open &rArr; app_uart_init &rArr; nrf_drv_uart_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_open
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_open
</UL>

<P><STRONG><a name="[1ef]"></a>ser_hal_transport_rx_pkt_free</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ser_hal_transport.o(i.ser_hal_transport_rx_pkt_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ser_hal_transport_rx_pkt_free
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_rx_buf_set
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_interrupts_enable
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_interrupts_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_events_handler
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_rx_free
</UL>

<P><STRONG><a name="[224]"></a>ser_hal_transport_tx_pkt_alloc</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ser_hal_transport.o(i.ser_hal_transport_tx_pkt_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_tx_alloc
</UL>

<P><STRONG><a name="[1ed]"></a>ser_hal_transport_tx_pkt_free</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ser_hal_transport.o(i.ser_hal_transport_tx_pkt_free))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_events_handler
</UL>

<P><STRONG><a name="[219]"></a>ser_hal_transport_tx_pkt_send</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ser_hal_transport.o(i.ser_hal_transport_tx_pkt_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_tx_pkt_send
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_interrupts_enable
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_interrupts_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_cmd_write
</UL>

<P><STRONG><a name="[217]"></a>ser_phy_interrupts_disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ser_phy_nrf51_uart.o(i.ser_phy_interrupts_disable))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_tx_pkt_send
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_rx_pkt_free
</UL>

<P><STRONG><a name="[218]"></a>ser_phy_interrupts_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ser_phy_nrf51_uart.o(i.ser_phy_interrupts_enable))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_tx_pkt_send
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_rx_pkt_free
</UL>

<P><STRONG><a name="[216]"></a>ser_phy_open</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ser_phy_nrf51_uart.o(i.ser_phy_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = ser_phy_open &rArr; app_uart_init &rArr; nrf_drv_uart_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_open
</UL>

<P><STRONG><a name="[1ee]"></a>ser_phy_rx_buf_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ser_phy_nrf51_uart.o(i.ser_phy_rx_buf_set))
<BR><BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_rx_pkt_free
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phy_events_handler
</UL>

<P><STRONG><a name="[21a]"></a>ser_phy_tx_pkt_send</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ser_phy_nrf51_uart.o(i.ser_phy_tx_pkt_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_uart_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_tx_pkt_send
</UL>

<P><STRONG><a name="[1f6]"></a>ser_sd_transport_cmd_write</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ser_sd_transport.o(i.ser_sd_transport_cmd_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_tx_pkt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_stop
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_start
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_uuid_encode
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_get
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_get
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_data_set
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_address_get
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_power_system_off
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_set
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_disconnect
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_set
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_set
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_set
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_get
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_changed
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_params_reply
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_info_reply
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_get
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_conn_param_update
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_set
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_hvx
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_descriptor_add
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_enable
</UL>

<P><STRONG><a name="[21e]"></a>ser_sd_transport_is_busy</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ser_sd_transport.o(i.ser_sd_transport_is_busy))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_rsp_wait
</UL>

<P><STRONG><a name="[20e]"></a>ser_sd_transport_open</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ser_sd_transport.o(i.ser_sd_transport_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = ser_sd_transport_open &rArr; ser_hal_transport_open &rArr; ser_phy_open &rArr; app_uart_init &rArr; nrf_drv_uart_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_open
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>

<P><STRONG><a name="[222]"></a>ser_sd_transport_rx_free</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ser_sd_transport.o(i.ser_sd_transport_rx_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ser_sd_transport_rx_free &rArr; ser_hal_transport_rx_pkt_free
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_rx_pkt_free
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_softdevice_evt_handler
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_rx_packet_handler
</UL>

<P><STRONG><a name="[223]"></a>ser_sd_transport_tx_alloc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ser_sd_transport.o(i.ser_sd_transport_tx_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ser_sd_transport_tx_alloc &rArr; ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buf_alloc
</UL>

<P><STRONG><a name="[76]"></a>ser_softdevice_flash_operation_success_evt</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ser_softdevice_handler.o(i.ser_softdevice_flash_operation_success_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ser_softdevice_flash_operation_success_evt &rArr; app_mailbox_put &rArr; app_mailbox_sized_put &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_put
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_nrf_evt_pending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ser_softdevice_handler.o(i.sd_softdevice_enable)
</UL>
<P><STRONG><a name="[1a8]"></a>softdevice_ble_evt_handler_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_ble_evt_handler_set))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[1a7]"></a>softdevice_enable</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, softdevice_handler.o(i.softdevice_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = softdevice_enable &rArr; log_rtt_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_rtt_printf
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_enable
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ram_end_address_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[1a5]"></a>softdevice_enable_get_default_config</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, softdevice_handler.o(i.softdevice_enable_get_default_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = softdevice_enable_get_default_config
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[7d]"></a>softdevice_fault_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_fault_handler))
<BR><BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> softdevice_handler.o(i.softdevice_handler_init)
</UL>
<P><STRONG><a name="[1a4]"></a>softdevice_handler_init</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, softdevice_handler.o(i.softdevice_handler_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = softdevice_handler_init &rArr; sd_softdevice_enable &rArr; ser_sd_transport_open &rArr; ser_hal_transport_open &rArr; ser_phy_open &rArr; app_uart_init &rArr; nrf_drv_uart_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_rtt_init
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_softdevice_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[1a9]"></a>softdevice_sys_evt_handler_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_sys_evt_handler_set))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[34]"></a>uart_event_handler</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, app_uart.o(i.uart_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = uart_event_handler &rArr; nrf_drv_uart_rx &rArr; nrf_drv_uart_rx_for_uarte
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_uart.o(i.app_uart_init)
</UL>
<P><STRONG><a name="[13a]"></a>uint16_dec</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, ble_serialization.o(i.uint16_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uint16_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_get_rsp_dec
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_get_rsp_dec
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_timeout_dec
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_sys_attr_missing_dec
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_sc_confirm_dec
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_hvc_dec
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_write_rsp_dec
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_timeout_dec
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_read_rsp_dec
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_prim_srvc_disc_rsp_dec
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_hvx_dec
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_desc_disc_rsp_dec
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_vals_read_rsp_dec
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_val_by_uuid_read_rsp_dec
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_disc_rsp_dec
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_timeout_dec
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_request_dec
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_info_request_dec
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_rssi_changed_dec
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_disconnected_dec
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_conn_sec_update_dec
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_conn_param_update_request_dec
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_conn_param_update_dec
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_key_request_dec
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_tx_complete_dec
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_get_rsp_dec
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_add_rsp_dec
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_descriptor_add_rsp_dec
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_params_t_dec
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_char_handles_dec
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_dec
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_handle_range_t_dec
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_vals_read_rsp_t_dec
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec
</UL>

<P><STRONG><a name="[4e]"></a>uint16_t_dec</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ble_serialization.o(i.uint16_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uint16_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_dec
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_dec
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_dec
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_rel_disc_rsp_dec
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_attr_info_disc_rsp_dec
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_params_request_dec
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_scan_req_report_dec
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_passkey_display_dec
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_lesc_dhkey_request_dec
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_key_pressed_dec
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_connected_dec
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_status_dec
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_adv_report_dec
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_user_mem_request_dec
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_user_mem_release_dec
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_dec
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_attr_info_disc_rsp_t_dec
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_master_id_t_dec
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_include_t_dec
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_attr_info_t_16_dec
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_attr_info_t_128_dec
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_rel_disc_rsp_t_dec
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_evt_rx_t_dec
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_t_dec
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_read_t_dec
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_t_dec
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_l2cap_header_t_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatts_hvx.o(i.ble_gatts_hvx_rsp_dec)
</UL>
<P><STRONG><a name="[fb]"></a>uint16_t_enc</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ble_serialization.o(i.uint16_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uint16_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_reply_req_enc
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_info_reply_req_enc
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_start_req_enc
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_changed_req_enc
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_descriptor_add_req_enc
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_req_enc
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_enc
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_master_id_t_enc
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_char_md_enc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_attr_enc
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len16data_enc
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_gatts_char_pf_enc
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_t_enc
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_enable_params_t_enc
</UL>

<P><STRONG><a name="[185]"></a>uint32_t_enc</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ble_serialization.o(i.uint32_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uint32_t_enc
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_set_req_enc
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_get_req_enc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_enable_params_t_enc
</UL>

<P><STRONG><a name="[13b]"></a>uint8_dec</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, ble_serialization.o(i.uint8_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uint8_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cond_field_dec
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_timeout_dec
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_sys_attr_missing_dec
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_write_rsp_dec
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_timeout_dec
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_prim_srvc_disc_rsp_dec
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_hvx_dec
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_desc_disc_rsp_dec
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_char_disc_rsp_dec
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_timeout_dec
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_disconnected_dec
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_conn_sec_update_dec
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_key_request_dec
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_tx_complete_dec
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_dec
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_dec
</UL>

<P><STRONG><a name="[13c]"></a>uint8_t_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ble_serialization.o(i.uint8_t_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uint8_t_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_scan_req_report_dec
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_passkey_display_dec
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_lesc_dhkey_request_dec
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_key_pressed_dec
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_adv_report_dec
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_user_mem_request_dec
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_user_mem_release_dec
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_sec_info_request_t_dec
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_connected_t_dec
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_auth_status_t_dec
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_evt_attr_info_disc_rsp_t_dec
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_t_dec
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_levels_dec
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_rw_authorize_request_t_dec
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_evt_write_t_dec
</UL>

<P><STRONG><a name="[fe]"></a>uint8_t_enc</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ble_serialization.o(i.uint8_t_enc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uint8_t_enc
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_reply_req_enc
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_info_reply_req_enc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_stop_req_enc
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_start_req_enc
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_data_set_req_enc
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_t_enc
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_enc
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_whitelist_t_enc
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_ch_mask_t_enc
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;len8data_enc
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_changed_req_enc
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_req_enc
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_t_enc
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_enable_params_t_enc
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_sec_mode_enc
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_char_md_enc
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ble_gatts_char_pf_enc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_enable_params_t_enc
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_bw_count_t_enc
</UL>

<P><STRONG><a name="[15e]"></a>uint8_vector_dec</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ble_serialization.o(i.uint8_vector_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uint8_vector_dec &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_evt_adv_report_dec
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[dd]"></a>application_timers_start</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, main.o(i.application_timers_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = application_timers_start &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>battery_level_meas_timeout_handler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, main.o(i.battery_level_meas_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = battery_level_meas_timeout_handler &rArr; ble_bas_battery_level_update &rArr; sd_ble_gatts_value_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorsim_measure
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_battery_level_update
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.timers_init)
</UL>
<P><STRONG><a name="[50]"></a>ble_evt_dispatch</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, main.o(i.ble_evt_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = ble_evt_dispatch &rArr; ble_advertising_on_ble_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_on_ble_evt
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_on_ble_evt
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[1a3]"></a>ble_stack_init</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, main.o(i.ble_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = ble_stack_init &rArr; softdevice_enable &rArr; log_rtt_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_sys_evt_handler_set
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable_get_default_config
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_ble_evt_handler_set
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_check_ram_start
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>conn_params_error_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.conn_params_error_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = conn_params_error_handler &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[58]"></a>device_manager_evt_handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(i.device_manager_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = device_manager_evt_handler &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.device_manager_init)
</UL>
<P><STRONG><a name="[1bf]"></a>device_manager_init</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, main.o(i.device_manager_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = device_manager_init &rArr; dm_init &rArr; pstorage_clear &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_register
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cc]"></a>gap_params_init</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, main.o(i.gap_params_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gap_params_init &rArr; sd_ble_gap_device_name_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_set
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_set
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_set
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>heart_rate_meas_timeout_handler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, main.o(i.heart_rate_meas_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = heart_rate_meas_timeout_handler &rArr; ble_hrs_heart_rate_measurement_send &rArr; sd_ble_gatts_hvx &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorsim_measure
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_heart_rate_measurement_send
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.timers_init)
</UL>
<P><STRONG><a name="[5b]"></a>on_adv_evt</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.on_adv_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = on_adv_evt &rArr; sleep_mode_enter &rArr; sd_power_system_off &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[5c]"></a>on_conn_params_evt</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(i.on_conn_params_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = on_conn_params_evt &rArr; sd_ble_gap_disconnect &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_disconnect
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[80]"></a>rr_interval_timeout_handler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.rr_interval_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rr_interval_timeout_handler &rArr; ble_hrs_rr_interval_add &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorsim_measure
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_rr_interval_add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.timers_init)
</UL>
<P><STRONG><a name="[81]"></a>sensor_contact_detected_timeout_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.sensor_contact_detected_timeout_handler))
<BR><BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_sensor_contact_detected_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.timers_init)
</UL>
<P><STRONG><a name="[1da]"></a>sensor_simulator_init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, main.o(i.sensor_simulator_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sensor_simulator_init
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensorsim_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d9]"></a>services_init</STRONG> (Thumb, 298 bytes, Stack size 120 bytes, main.o(i.services_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = services_init &rArr; ble_dis_init &rArr; char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_ascii_to_utf8
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_init
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dis_init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b2]"></a>sleep_mode_enter</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, main.o(i.sleep_mode_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = sleep_mode_enter &rArr; sd_power_system_off &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_power_system_off
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_sleep_mode_prepare
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
</UL>

<P><STRONG><a name="[51]"></a>sys_evt_dispatch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(i.sys_evt_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = sys_evt_dispatch &rArr; ble_advertising_on_sys_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_sys_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[1d8]"></a>timers_init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, main.o(i.timers_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = timers_init &rArr; app_timer_init &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>alert_timer_handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp.o(i.alert_timer_handler))
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(i.bsp_init)
</UL>
<P><STRONG><a name="[82]"></a>bsp_button_event_handler</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, bsp.o(i.bsp_button_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bsp_button_event_handler &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_timer_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(.constdata)
</UL>
<P><STRONG><a name="[1b4]"></a>bsp_led_indication</STRONG> (Thumb, 536 bytes, Stack size 40 bytes, bsp.o(i.bsp_led_indication))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;leds_timer_handler
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
</UL>

<P><STRONG><a name="[52]"></a>button_timer_handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp.o(i.button_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = button_timer_handler &rArr; bsp_button_event_handler &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_button_event_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(i.bsp_init)
</UL>
<P><STRONG><a name="[53]"></a>leds_timer_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bsp.o(i.leds_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = leds_timer_handler &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(i.bsp_init)
</UL>
<P><STRONG><a name="[b9]"></a>advertising_buttons_configure</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bsp_btn_ble.o(i.advertising_buttons_configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = advertising_buttons_configure &rArr; bsp_event_to_button_action_assign
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_init
</UL>

<P><STRONG><a name="[b1]"></a>ble_device_addr_encode</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ble_advdata.o(i.ble_device_addr_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ble_device_addr_encode &rArr; sd_ble_gap_address_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_address_get
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[b5]"></a>conn_int_encode</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, ble_advdata.o(i.conn_int_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = conn_int_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[b0]"></a>le_role_encode</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, ble_advdata.o(i.le_role_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = le_role_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[b6]"></a>manuf_specific_data_encode</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ble_advdata.o(i.manuf_specific_data_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = manuf_specific_data_encode &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[b8]"></a>name_encode</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, ble_advdata.o(i.name_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = name_encode &rArr; sd_ble_gap_device_name_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_get
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[b7]"></a>service_data_encode</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, ble_advdata.o(i.service_data_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = service_data_encode &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[b3]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_advdata.o(i.uint16_encode))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_encode
</UL>

<P><STRONG><a name="[b4]"></a>uuid_list_encode</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, ble_advdata.o(i.uuid_list_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = uuid_list_encode &rArr; uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_sized_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[22d]"></a>uuid_list_sized_encode</STRONG> (Thumb, 178 bytes, Stack size 64 bytes, ble_advdata.o(i.uuid_list_sized_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = uuid_list_sized_encode &rArr; sd_ble_uuid_encode &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_uuid_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
</UL>

<P><STRONG><a name="[eb]"></a>ble_advertising_peer_address_clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ble_advertising.o(i.ble_advertising_peer_address_clear))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
</UL>

<P><STRONG><a name="[f3]"></a>peer_address_exists</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ble_advertising.o(i.peer_address_exists))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[f4]"></a>whitelist_has_entries</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ble_advertising.o(i.whitelist_has_entries))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[e1]"></a>battery_level_char_add</STRONG> (Thumb, 338 bytes, Stack size 104 bytes, ble_bas.o(i.battery_level_char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = battery_level_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_descriptor_add
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_report_ref_encode
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bas_init
</UL>

<P><STRONG><a name="[103]"></a>conn_params_negotiation</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ble_conn_params.o(i.conn_params_negotiation))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = conn_params_negotiation &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_conn_params_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
</UL>

<P><STRONG><a name="[1b7]"></a>is_conn_params_ok</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_conn_params.o(i.is_conn_params_ok))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
</UL>

<P><STRONG><a name="[36]"></a>update_timeout_handler</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ble_conn_params.o(i.update_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = update_timeout_handler &rArr; sd_ble_gap_disconnect &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_disconnect
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_conn_param_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_conn_params.o(i.ble_conn_params_init)
</UL>
<P><STRONG><a name="[106]"></a>char_add</STRONG> (Thumb, 158 bytes, Stack size 88 bytes, ble_dis.o(i.char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dis_init
</UL>

<P><STRONG><a name="[108]"></a>pnp_id_encode</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ble_dis.o(i.pnp_id_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pnp_id_encode &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dis_init
</UL>

<P><STRONG><a name="[107]"></a>sys_id_encode</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, ble_dis.o(i.sys_id_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_id_encode &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dis_init
</UL>

<P><STRONG><a name="[19c]"></a>body_sensor_location_char_add</STRONG> (Thumb, 136 bytes, Stack size 80 bytes, ble_hrs.o(i.body_sensor_location_char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = body_sensor_location_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_init
</UL>

<P><STRONG><a name="[19b]"></a>heart_rate_measurement_char_add</STRONG> (Thumb, 196 bytes, Stack size 96 bytes, ble_hrs.o(i.heart_rate_measurement_char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = heart_rate_measurement_char_add &rArr; sd_ble_gatts_characteristic_add &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrm_encode
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_init
</UL>

<P><STRONG><a name="[199]"></a>hrm_encode</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, ble_hrs.o(i.hrm_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hrm_encode &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_heart_rate_measurement_send
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_measurement_char_add
</UL>

<P><STRONG><a name="[1c7]"></a>app_evt_notify</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.app_evt_notify))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
</UL>

<P><STRONG><a name="[1c4]"></a>connection_instance_find</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, device_manager_peripheral.o(i.connection_instance_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = connection_instance_find
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[1c8]"></a>connection_instance_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.connection_instance_init))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[1b9]"></a>device_context_store</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, device_manager_peripheral.o(i.device_context_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = device_context_store &rArr; pstorage_block_identifier_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[1ba]"></a>device_instance_find</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, device_manager_peripheral.o(i.device_instance_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = device_instance_find &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[1bc]"></a>device_instance_free</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, device_manager_peripheral.o(i.device_instance_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = device_instance_free &rArr; pstorage_clear &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[59]"></a>dm_pstorage_cb_handler</STRONG> (Thumb, 374 bytes, Stack size 104 bytes, device_manager_peripheral.o(i.dm_pstorage_cb_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = dm_pstorage_cb_handler &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_handle_initialize
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_status_bit_reset
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_evt_notify
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(i.dm_init)
</UL>
<P><STRONG><a name="[8d]"></a>gattc_context_apply</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.gattc_context_apply))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>gattc_context_load</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.gattc_context_load))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>gattc_context_store</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.gattc_context_store))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>gatts_context_apply</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, device_manager_peripheral.o(i.gatts_context_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gatts_context_apply &rArr; sd_ble_gatts_sys_attr_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_set
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_changed
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattsc_context_apply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>gatts_context_load</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, device_manager_peripheral.o(i.gatts_context_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gatts_context_load &rArr; pstorage_load &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattsc_context_load
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>gatts_context_store</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, device_manager_peripheral.o(i.gatts_context_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = gatts_context_store &rArr; sd_ble_gatts_sys_attr_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_get
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattsc_context_store
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>gattsc_context_apply</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.gattsc_context_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gattsc_context_apply &rArr; gatts_context_apply &rArr; sd_ble_gatts_sys_attr_set &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_apply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>gattsc_context_load</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.gattsc_context_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gattsc_context_load &rArr; gatts_context_load &rArr; pstorage_load &rArr; app_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_load
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>gattsc_context_store</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.gattsc_context_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = gattsc_context_store &rArr; gatts_context_store &rArr; sd_ble_gatts_sys_attr_get &rArr; ser_sd_transport_cmd_write &rArr; ser_hal_transport_tx_pkt_send &rArr; ser_phy_tx_pkt_send &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>no_service_context_apply</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.no_service_context_apply))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>no_service_context_load</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.no_service_context_load))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>no_service_context_store</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.no_service_context_store))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[1be]"></a>peer_instance_init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, device_manager_peripheral.o(i.peer_instance_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = peer_instance_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_status_bit_reset
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
</UL>

<P><STRONG><a name="[55]"></a>storage_operation_dummy_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.storage_operation_dummy_handler))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(i.device_context_store)
</UL>
<P><STRONG><a name="[1ca]"></a>update_status_bit_reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.update_status_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
</UL>

<P><STRONG><a name="[142]"></a>flash_page_erase</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, ble_flash.o(i.flash_page_erase))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_page_erase
</UL>

<P><STRONG><a name="[140]"></a>flash_word_write</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ble_flash.o(i.flash_word_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_word_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_app_evt_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_flash_block_write
</UL>

<P><STRONG><a name="[1e1]"></a>channel_free</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.channel_free))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>

<P><STRONG><a name="[1df]"></a>channel_port_alloc</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, nrf_drv_gpiote.o(i.channel_port_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = channel_port_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
</UL>

<P><STRONG><a name="[99]"></a>channel_port_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.channel_port_get))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[1e0]"></a>nrf_gpio_cfg</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, nrf_drv_gpiote.o(i.nrf_gpio_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_init
</UL>

<P><STRONG><a name="[9a]"></a>nrf_gpio_cfg_sense_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_gpio_cfg_sense_set))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[98]"></a>nrf_gpiote_event_clear</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(i.nrf_gpiote_event_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_gpiote_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[97]"></a>nrf_gpiote_event_is_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_gpiote_event_is_set))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[1dd]"></a>pin_in_use_by_port</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.pin_in_use_by_port))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
</UL>

<P><STRONG><a name="[1de]"></a>pin_in_use_by_te</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.pin_in_use_by_te))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_event_enable
</UL>

<P><STRONG><a name="[de]"></a>apply_config</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, nrf_drv_uart.o(i.apply_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_init
</UL>

<P><STRONG><a name="[1e4]"></a>nrf_drv_uart_rx_for_uart</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, nrf_drv_uart.o(i.nrf_drv_uart_rx_for_uart))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrf_drv_uart_rx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_enable
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_byte
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
</UL>

<P><STRONG><a name="[1e3]"></a>nrf_drv_uart_rx_for_uarte</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, nrf_drv_uart.o(i.nrf_drv_uart_rx_for_uarte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrf_drv_uart_rx_for_uarte
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uarte_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
</UL>

<P><STRONG><a name="[1ea]"></a>nrf_drv_uart_tx_for_uart</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, nrf_drv_uart.o(i.nrf_drv_uart_tx_for_uart))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_byte
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx
</UL>

<P><STRONG><a name="[1ec]"></a>nrf_gpio_cfg</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, nrf_drv_uart.o(i.nrf_gpio_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>

<P><STRONG><a name="[e0]"></a>nrf_gpio_cfg_input</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, nrf_drv_uart.o(i.nrf_gpio_cfg_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
</UL>

<P><STRONG><a name="[df]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, nrf_drv_uart.o(i.nrf_gpio_cfg_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
</UL>

<P><STRONG><a name="[1e6]"></a>nrf_uart_event_check</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_uart.o(i.nrf_uart_event_check))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx_for_uart
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx_for_uart
</UL>

<P><STRONG><a name="[229]"></a>nrf_uart_int_enable_check</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrf_drv_uart.o(i.nrf_uart_int_enable_check))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[1e8]"></a>nrf_uarte_event_check</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_uart.o(i.nrf_uarte_event_check))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uarte_irq_handler
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx_for_uarte
</UL>

<P><STRONG><a name="[1e7]"></a>rx_byte</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, nrf_drv_uart.o(i.rx_byte))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx_for_uart
</UL>

<P><STRONG><a name="[22a]"></a>rx_done_event</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, nrf_drv_uart.o(i.rx_done_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rx_done_event
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uarte_irq_handler
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[1e5]"></a>rx_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nrf_drv_uart.o(i.rx_enable))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx_enable
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx_for_uart
</UL>

<P><STRONG><a name="[1eb]"></a>tx_byte</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, nrf_drv_uart.o(i.tx_byte))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx_for_uart
</UL>

<P><STRONG><a name="[22b]"></a>tx_done_event</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, nrf_drv_uart.o(i.tx_done_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tx_done_event
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uarte_irq_handler
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[ac]"></a>uart_irq_handler</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, nrf_drv_uart.o(i.uart_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uart_irq_handler &rArr; tx_done_event
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_done_event
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_byte
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_done_event
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_byte
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_enable_check
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTE0_UART0_IRQHandler
</UL>

<P><STRONG><a name="[ab]"></a>uarte_irq_handler</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, nrf_drv_uart.o(i.uarte_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uarte_irq_handler &rArr; tx_done_event
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_done_event
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_done_event
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uarte_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTE0_UART0_IRQHandler
</UL>

<P><STRONG><a name="[1f0]"></a>app_notify</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, pstorage_nosd.o(i.app_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_store
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
</UL>

<P><STRONG><a name="[1f3]"></a>is_word_aligned</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pstorage_nosd.o(i.is_word_aligned))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_store
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
</UL>

<P><STRONG><a name="[1f1]"></a>pstorage_flash_page_end</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, pstorage_nosd.o(i.pstorage_flash_page_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pstorage_flash_page_end
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
</UL>

<P><STRONG><a name="[1f2]"></a>pstorage_flash_page_size</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pstorage_nosd.o(i.pstorage_flash_page_size))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
</UL>

<P><STRONG><a name="[33]"></a>detection_delay_timeout_handler</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, app_button.o(i.detection_delay_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = detection_delay_timeout_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(i.app_button_init)
</UL>
<P><STRONG><a name="[32]"></a>gpiote_event_handler</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, app_button.o(i.gpiote_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gpiote_event_handler &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_in_is_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_button.o(i.app_button_init)
</UL>
<P><STRONG><a name="[c8]"></a>dequeue</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_mailbox.o(i.dequeue))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_sized_put
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_sized_get
</UL>

<P><STRONG><a name="[cc]"></a>NVIC_ClearPendingIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_timer.o(i.NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[ce]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_timer.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[d2]"></a>NVIC_SetPendingIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_timer.o(i.NVIC_SetPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[cd]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_timer.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
</UL>

<P><STRONG><a name="[1b6]"></a>compare_reg_update</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, app_timer.o(i.compare_reg_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = compare_reg_update &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPendingIRQ
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[227]"></a>elapsed_ticks_acquire</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_timer.o(i.elapsed_ticks_acquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = elapsed_ticks_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[228]"></a>list_deletions_handler</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, app_timer.o(i.list_deletions_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = list_deletions_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[1d4]"></a>list_insertions_handler</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, app_timer.o(i.list_insertions_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = list_insertions_handler &rArr; timer_list_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[cb]"></a>rtc1_stop</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_timer.o(i.rtc1_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[a8]"></a>timer_list_handler</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, app_timer.o(i.timer_list_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = timer_list_handler &rArr; compare_reg_update &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elapsed_ticks_acquire
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_EGU0_IRQHandler
</UL>

<P><STRONG><a name="[1d5]"></a>timer_list_insert</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app_timer.o(i.timer_list_insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
</UL>

<P><STRONG><a name="[9b]"></a>timer_timeouts_check</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, app_timer.o(i.timer_timeouts_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = timer_timeouts_check &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
</UL>

<P><STRONG><a name="[d0]"></a>user_id_get</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, app_timer.o(i.user_id_get))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>

<P><STRONG><a name="[d1]"></a>user_op_alloc</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app_timer.o(i.user_op_alloc))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>

<P><STRONG><a name="[9d]"></a>_DoInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, segger_rtt.o(i._DoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ConfigUpBuffer
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_ConfigDownBuffer
</UL>

<P><STRONG><a name="[a1]"></a>_GetAvailWriteSpace</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, segger_rtt.o(i._GetAvailWriteSpace))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[a3]"></a>_WriteBlocking</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, segger_rtt.o(i._WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[a2]"></a>_WriteNoCheck</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, segger_rtt.o(i._WriteNoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[a6]"></a>_PrintInt</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, segger_rtt_printf.o(i._PrintInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>

<P><STRONG><a name="[a7]"></a>_PrintUnsigned</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, segger_rtt_printf.o(i._PrintUnsigned))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>

<P><STRONG><a name="[a5]"></a>_StoreChar</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, segger_rtt_printf.o(i._StoreChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>

<P><STRONG><a name="[5e]"></a>enable_rsp_dec</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_mw_ble.o(i.enable_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = enable_rsp_dec &rArr; ble_enable_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_enable_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble.o(i.sd_ble_enable)
</UL>
<P><STRONG><a name="[1f5]"></a>tx_buf_alloc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_mw_ble.o(i.tx_buf_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tx_buf_alloc &rArr; ser_sd_transport_tx_alloc &rArr; ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_tx_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_uuid_encode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_enable
</UL>

<P><STRONG><a name="[75]"></a>uuid_encode_rsp_dec</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, app_mw_ble.o(i.uuid_encode_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = uuid_encode_rsp_dec &rArr; ble_uuid_encode_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uuid_encode_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble.o(i.sd_ble_uuid_encode)
</UL>
<P><STRONG><a name="[5f]"></a>gap_address_get_rsp_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mw_ble_gap.o(i.gap_address_get_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gap_address_get_rsp_dec &rArr; ble_gap_address_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_address_get_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_address_get)
</UL>
<P><STRONG><a name="[60]"></a>gap_adv_data_set_rsp_dec</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_mw_ble_gap.o(i.gap_adv_data_set_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gap_adv_data_set_rsp_dec &rArr; ble_gap_adv_data_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_data_set_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_adv_data_set)
</UL>
<P><STRONG><a name="[61]"></a>gap_adv_start_rsp_dec</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_mw_ble_gap.o(i.gap_adv_start_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gap_adv_start_rsp_dec &rArr; ble_gap_adv_start_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_start_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_adv_start)
</UL>
<P><STRONG><a name="[62]"></a>gap_adv_stop_rsp_dec</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_mw_ble_gap.o(i.gap_adv_stop_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gap_adv_stop_rsp_dec &rArr; ble_gap_adv_stop_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_adv_stop_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_adv_stop)
</UL>
<P><STRONG><a name="[63]"></a>gap_appearance_get_rsp_dec</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_mw_ble_gap.o(i.gap_appearance_get_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gap_appearance_get_rsp_dec &rArr; ble_gap_appearance_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_get_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_appearance_get)
</UL>
<P><STRONG><a name="[64]"></a>gap_appearance_set_rsp_dec</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_mw_ble_gap.o(i.gap_appearance_set_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gap_appearance_set_rsp_dec &rArr; ble_gap_appearance_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_appearance_set_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_appearance_set)
</UL>
<P><STRONG><a name="[65]"></a>gap_conn_param_update_rsp_dec</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_mw_ble_gap.o(i.gap_conn_param_update_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gap_conn_param_update_rsp_dec &rArr; ble_gap_conn_param_update_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_param_update_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_conn_param_update)
</UL>
<P><STRONG><a name="[66]"></a>gap_device_name_get_rsp_dec</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, app_mw_ble_gap.o(i.gap_device_name_get_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = gap_device_name_get_rsp_dec &rArr; ble_gap_device_name_get_rsp_dec &rArr; len16data_dec &rArr; buf_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_get_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_device_name_get)
</UL>
<P><STRONG><a name="[67]"></a>gap_device_name_set_rsp_dec</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_mw_ble_gap.o(i.gap_device_name_set_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gap_device_name_set_rsp_dec &rArr; ble_gap_device_name_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_device_name_set_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_device_name_set)
</UL>
<P><STRONG><a name="[68]"></a>gap_disconnect_rsp_dec</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_mw_ble_gap.o(i.gap_disconnect_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gap_disconnect_rsp_dec &rArr; ble_gap_disconnect_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_disconnect)
</UL>
<P><STRONG><a name="[69]"></a>gap_ppcp_get_reply_rsp_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mw_ble_gap.o(i.gap_ppcp_get_reply_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gap_ppcp_get_reply_rsp_dec &rArr; ble_gap_ppcp_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_get_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_ppcp_get)
</UL>
<P><STRONG><a name="[6a]"></a>gap_ppcp_set_rsp_dec</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_mw_ble_gap.o(i.gap_ppcp_set_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gap_ppcp_set_rsp_dec &rArr; ble_gap_ppcp_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_set_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_ppcp_set)
</UL>
<P><STRONG><a name="[6b]"></a>gap_sec_info_reply_rsp_dec</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_mw_ble_gap.o(i.gap_sec_info_reply_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gap_sec_info_reply_rsp_dec &rArr; ble_gap_sec_info_reply_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_info_reply_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_sec_info_reply)
</UL>
<P><STRONG><a name="[6c]"></a>gap_sec_params_reply_rsp_dec</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_mw_ble_gap.o(i.gap_sec_params_reply_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = gap_sec_params_reply_rsp_dec &rArr; ble_gap_sec_params_reply_rsp_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_sec_context_destroy
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_sec_params_reply_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gap.o(i.sd_ble_gap_sec_params_reply)
</UL>
<P><STRONG><a name="[1f7]"></a>tx_buf_alloc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_mw_ble_gap.o(i.tx_buf_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tx_buf_alloc &rArr; ser_sd_transport_tx_alloc &rArr; ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_tx_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_stop
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_start
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_get
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_get
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_adv_data_set
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_address_get
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_set
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_disconnect
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_device_name_set
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_appearance_set
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_params_reply
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_sec_info_reply
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_ppcp_get
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gap_conn_param_update
</UL>

<P><STRONG><a name="[6d]"></a>gatts_characteristic_add_rsp_dec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_mw_ble_gatts.o(i.gatts_characteristic_add_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = gatts_characteristic_add_rsp_dec &rArr; ble_gatts_characteristic_add_rsp_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_characteristic_add_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(i.sd_ble_gatts_characteristic_add)
</UL>
<P><STRONG><a name="[6e]"></a>gatts_descriptor_add_rsp_dec</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mw_ble_gatts.o(i.gatts_descriptor_add_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gatts_descriptor_add_rsp_dec &rArr; ble_gatts_descriptor_add_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_descriptor_add_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(i.sd_ble_gatts_descriptor_add)
</UL>
<P><STRONG><a name="[6f]"></a>gatts_hvx_rsp_dec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_mw_ble_gatts.o(i.gatts_hvx_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = gatts_hvx_rsp_dec &rArr; ble_gatts_hvx_rsp_dec &rArr; cond_field_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_hvx_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(i.sd_ble_gatts_hvx)
</UL>
<P><STRONG><a name="[70]"></a>gatts_service_add_rsp_dec</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_mw_ble_gatts.o(i.gatts_service_add_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gatts_service_add_rsp_dec &rArr; ble_gatts_service_add_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_add_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(i.sd_ble_gatts_service_add)
</UL>
<P><STRONG><a name="[71]"></a>gatts_service_changed_rsp_dec</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_mw_ble_gatts.o(i.gatts_service_changed_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gatts_service_changed_rsp_dec &rArr; ble_gatts_service_changed_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_service_changed_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(i.sd_ble_gatts_service_changed)
</UL>
<P><STRONG><a name="[72]"></a>gatts_sys_attr_get_rsp_dec</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, app_mw_ble_gatts.o(i.gatts_sys_attr_get_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = gatts_sys_attr_get_rsp_dec &rArr; ble_gatts_sys_attr_get_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_get_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(i.sd_ble_gatts_sys_attr_get)
</UL>
<P><STRONG><a name="[73]"></a>gatts_sys_attr_set_rsp_dec</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_mw_ble_gatts.o(i.gatts_sys_attr_set_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gatts_sys_attr_set_rsp_dec &rArr; ble_gatts_sys_attr_set_rsp_dec &rArr; ser_ble_cmd_rsp_dec &rArr; ser_ble_cmd_rsp_result_code_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_sys_attr_set_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(i.sd_ble_gatts_sys_attr_set)
</UL>
<P><STRONG><a name="[74]"></a>gatts_value_set_rsp_dec</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_mw_ble_gatts.o(i.gatts_value_set_rsp_dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = gatts_value_set_rsp_dec &rArr; ble_gatts_value_set_rsp_dec &rArr; ble_gatts_value_t_dec &rArr; buf_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_value_set_rsp_dec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mw_ble_gatts.o(i.sd_ble_gatts_value_set)
</UL>
<P><STRONG><a name="[200]"></a>tx_buf_alloc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_mw_ble_gatts.o(i.tx_buf_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tx_buf_alloc &rArr; ser_sd_transport_tx_alloc &rArr; ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_tx_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_set
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_sys_attr_get
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_changed
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_value_set
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_service_add
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_hvx
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_descriptor_add
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_ble_gatts_characteristic_add
</UL>

<P><STRONG><a name="[206]"></a>tx_buf_alloc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_mw_nrf_soc.o(i.tx_buf_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tx_buf_alloc &rArr; ser_sd_transport_tx_alloc &rArr; ser_hal_transport_tx_pkt_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_tx_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_power_system_off
</UL>

<P><STRONG><a name="[150]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_gap_conn_param_update.o(i.uint16_encode))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_param_update_req_enc
</UL>

<P><STRONG><a name="[16e]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_gap_ppcp_set.o(i.uint16_encode))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_ppcp_set_req_enc
</UL>

<P><STRONG><a name="[18a]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_gatts_hvx.o(i.uint16_encode))
<BR><BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatts_hvx_req_enc
</UL>

<P><STRONG><a name="[22c]"></a>uint32_encode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_serialization.o(i.uint32_encode))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_t_enc
</UL>

<P><STRONG><a name="[7a]"></a>phy_events_handler</STRONG> (Thumb, 382 bytes, Stack size 40 bytes, ser_hal_transport.o(i.phy_events_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = phy_events_handler &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_rx_buf_set
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_tx_pkt_free
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_hal_transport_rx_pkt_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ser_hal_transport.o(i.ser_hal_transport_open)
</UL>
<P><STRONG><a name="[21c]"></a>callback_ser_phy_event</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ser_phy_nrf51_uart.o(i.callback_ser_phy_event))
<BR><BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_uart_tx
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_uart_rx
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_uart_evt_callback
</UL>

<P><STRONG><a name="[7b]"></a>ser_phy_uart_evt_callback</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, ser_phy_nrf51_uart.o(i.ser_phy_uart_evt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ser_phy_uart_evt_callback &rArr; ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_uart_tx
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_uart_rx
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_ser_phy_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ser_phy_nrf51_uart.o(i.ser_phy_open)
</UL>
<P><STRONG><a name="[21d]"></a>ser_phy_uart_rx</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, ser_phy_nrf51_uart.o(i.ser_phy_uart_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ser_phy_uart_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_ser_phy_event
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_uart_evt_callback
</UL>

<P><STRONG><a name="[21b]"></a>ser_phy_uart_tx</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ser_phy_nrf51_uart.o(i.ser_phy_uart_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ser_phy_uart_tx &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrf_drv_uart_tx_for_uart
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_put
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_ser_phy_event
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_uart_evt_callback
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_phy_tx_pkt_send
</UL>

<P><STRONG><a name="[7c]"></a>ser_sd_transport_hal_handler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, ser_sd_transport.o(i.ser_sd_transport_hal_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ser_sd_transport_hal_handler &rArr; ser_sd_transport_rx_packet_handler &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_power_system_off_get
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_power_system_off_enter
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_rx_packet_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ser_sd_transport.o(i.ser_sd_transport_open)
</UL>
<P><STRONG><a name="[21f]"></a>ser_sd_transport_rx_packet_handler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, ser_sd_transport.o(i.ser_sd_transport_rx_packet_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ser_sd_transport_rx_packet_handler &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_rx_free
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_hal_handler
</UL>

<P><STRONG><a name="[78]"></a>ser_sd_rsp_wait</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ser_softdevice_handler.o(i.ser_sd_rsp_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ser_sd_rsp_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_app_evt_wait
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_is_busy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ser_softdevice_handler.o(i.sd_softdevice_enable)
</UL>
<P><STRONG><a name="[79]"></a>ser_softdevice_evt_handler</STRONG> (Thumb, 60 bytes, Stack size 88 bytes, ser_softdevice_handler.o(i.ser_softdevice_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = ser_softdevice_evt_handler &rArr; ble_event_dec &rArr; ble_gatts_evt_rw_authorize_request_dec &rArr; ble_gatts_evt_rw_authorize_request_t_dec &rArr; ble_gatts_evt_write_t_dec &rArr; ble_uuid_t_dec &rArr; uint8_dec
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mailbox_put
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_dec
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_app_hal_nrf_evt_pending
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_sd_transport_rx_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ser_softdevice_handler.o(i.sd_softdevice_enable)
</UL>
<P><STRONG><a name="[204]"></a>ram_end_address_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, softdevice_handler.o(i.ram_end_address_get))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_check_ram_start
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
